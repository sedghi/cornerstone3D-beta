{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///cornerstoneWADOImageLoaderWebWorker.min.js","webpack:///webpack/bootstrap 3fdf8141dcbbe6e6bb3f","webpack:///./shared/getMinMax.js","webpack:///./webWorker/decodeTask/decoders/decodeJPEG2000.js","webpack:///./webWorker/decodeTask/decoders/decodeJPEGLS.js","webpack:///./webWorker/index.js","webpack:///./webWorker/webWorker.js","webpack:///./webWorker/decodeTask/decodeTask.js","webpack:///./webWorker/decodeTask/decodeImageFrame.js","webpack:///./webWorker/decodeTask/decoders/decodeLittleEndian.js","webpack:///./webWorker/decodeTask/decoders/decodeBigEndian.js","webpack:///./webWorker/decodeTask/decoders/decodeRLE.js","webpack:///./webWorker/decodeTask/decoders/decodeJPEGBaseline.js","webpack:///./webWorker/decodeTask/decoders/decodeJPEGLossless.js","webpack:///./version.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","2","getMinMax","storedPixelData","min","max","storedPixel","numPixels","length","index","Math","value","default","37","decodeJpx","imageFrame","pixelData","jpxImage","JpxImage","parse","tileCount","tiles","columns","width","rows","height","items","decodeOpenJPEG","data","bytesPerPixel","signed","dataPtr","openJPEG","_malloc","writeArrayToMemory","imagePtrPtr","imageSizePtr","imageSizeXPtr","imageSizeYPtr","imageSizeCompPtr","t0","performance","now","ccall","console","log","_free","getValue","imagePtr","image","sx","sy","nbChannels","perf_timetodecode","undefined","src32","Int32Array","HEAP32","buffer","Uint8Array","from","Int16Array","Uint16Array","t1","decodeOpenJpeg2000","bitsAllocated","pixelRepresentation","photometricInterpretation","initializeJPEG2000","decodeConfig","usePDFJS","OpenJPEG","_jp2_decode","decodeJPEG2000","options","arguments","38","jpegLSDecode","isSigned","charLS","widthPtr","heightPtr","bitsPerSamplePtr","stridePtr","allowedLossyErrorPtr","componentsPtr","interleaveModePtr","result","bitsPerSample","stride","components","allowedLossyError","interleaveMode","set","HEAP8","HEAP16","initializeJPEGLS","CharLS","_jpegls_decode","decodeJPEGLS","56","_interopRequireDefault","obj","version","registerTaskHandler","_version","_webWorker","_decodeTask","_decodeTask2","57","initialize","initialized","config","webWorkerTaskPaths","self","importScripts","keys","taskHandlers","forEach","key","taskConfiguration","postMessage","taskType","status","workerIndex","taskHandler","loadWebWorkerTask","sourcePath","onmessage","msg","handler","transferList","58","loadCodecs","codecsLoaded","decodeTask","codecsPath","initializeCodecsOnStartup","_decodeJPEG","_decodeJPEGLS","decodeTaskInitialize","loadCodecsOnStartup","calculateMinMax","minMax","_getMinMax2","strict","smallestPixelValue","warn","largestPixelValue","decodeTaskHandler","doneCallback","_decodeImageFrame2","transferSyntax","Error","_getMinMax","_decodeImageFrame","59","decodeImageFrame","start","Date","getTime","_decodeLittleEndian2","_decodeBigEndian2","_decodeRLE2","_decodeJPEGBaseline2","_decodeJPEGLossless2","_decodeJPEGLS2","_decodeJPEG2","end","decodeTimeInMS","_decodeLittleEndian","_decodeBigEndian","_decodeRLE","_decodeJPEGBaseline","_decodeJPEGLossless","60","decodeLittleEndian","arrayBuffer","offset","byteOffset","slice","61","swap16","val","decodeBigEndian","62","decodeRLE","planarConfiguration","decode8Planar","decode8","decode16","frameData","frameSize","outFrame","ArrayBuffer","samplesPerPixel","header","DataView","Int8Array","out","outIndex","numSegments","getInt32","inIndex","maxIndex","endOfSegment","j","highByte","63","decodeJPEGBaseline","JpegImage","jpeg","colorTransform","getData","getData16","64","decodeJPEGLossless","lossless","Decoder","byteOutput","decoder","decompressedData","decode","9"],"mappings":"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","file":"cornerstoneWADOImageLoaderWebWorker.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"cornerstoneWADOImageLoaderWebWorker\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cornerstoneWADOImageLoaderWebWorker\"] = factory();\n\telse\n\t\troot[\"cornerstoneWADOImageLoaderWebWorker\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","/*! cornerstone-wado-image-loader - 1.0.1 - 2017-11-06 | (c) 2016 Chris Hafey | https://github.com/chafey/cornerstoneWADOImageLoader */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"cornerstoneWADOImageLoaderWebWorker\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cornerstoneWADOImageLoaderWebWorker\"] = factory();\n\telse\n\t\troot[\"cornerstoneWADOImageLoaderWebWorker\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 56);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 2:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction getMinMax(storedPixelData) {\n  // we always calculate the min max values since they are not always\n  // present in DICOM and we don't want to trust them anyway as cornerstone\n  // depends on us providing reliable values for these\n  var min = storedPixelData[0];\n  var max = storedPixelData[0];\n  var storedPixel = void 0;\n  var numPixels = storedPixelData.length;\n\n  for (var index = 1; index < numPixels; index++) {\n    storedPixel = storedPixelData[index];\n    min = Math.min(min, storedPixel);\n    max = Math.max(max, storedPixel);\n  }\n\n  return {\n    min: min,\n    max: max\n  };\n}\n\nexports.default = getMinMax;\n\n/***/ }),\n\n/***/ 37:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction decodeJpx(imageFrame, pixelData) {\n  var jpxImage = new JpxImage();\n\n  jpxImage.parse(pixelData);\n\n  var tileCount = jpxImage.tiles.length;\n\n  if (tileCount !== 1) {\n    throw 'JPEG2000 decoder returned a tileCount of ' + tileCount + ', when 1 is expected';\n  }\n\n  imageFrame.columns = jpxImage.width;\n  imageFrame.rows = jpxImage.height;\n  imageFrame.pixelData = jpxImage.tiles[0].items;\n\n  return imageFrame;\n}\n\nvar openJPEG = void 0;\n\nfunction decodeOpenJPEG(data, bytesPerPixel, signed) {\n  var dataPtr = openJPEG._malloc(data.length);\n\n  openJPEG.writeArrayToMemory(data, dataPtr);\n\n  // create param outpout\n  var imagePtrPtr = openJPEG._malloc(4);\n  var imageSizePtr = openJPEG._malloc(4);\n  var imageSizeXPtr = openJPEG._malloc(4);\n  var imageSizeYPtr = openJPEG._malloc(4);\n  var imageSizeCompPtr = openJPEG._malloc(4);\n\n  var t0 = performance.now();\n  var ret = openJPEG.ccall('jp2_decode', 'number', ['number', 'number', 'number', 'number', 'number', 'number', 'number'], [dataPtr, data.length, imagePtrPtr, imageSizePtr, imageSizeXPtr, imageSizeYPtr, imageSizeCompPtr]);\n  // add num vomp..etc\n\n  if (ret !== 0) {\n    console.log('[opj_decode] decoding failed!');\n    openJPEG._free(dataPtr);\n    openJPEG._free(openJPEG.getValue(imagePtrPtr, '*'));\n    openJPEG._free(imageSizeXPtr);\n    openJPEG._free(imageSizeYPtr);\n    openJPEG._free(imageSizePtr);\n    openJPEG._free(imageSizeCompPtr);\n\n    return;\n  }\n\n  var imagePtr = openJPEG.getValue(imagePtrPtr, '*');\n\n  var image = {\n    length: openJPEG.getValue(imageSizePtr, 'i32'),\n    sx: openJPEG.getValue(imageSizeXPtr, 'i32'),\n    sy: openJPEG.getValue(imageSizeYPtr, 'i32'),\n    nbChannels: openJPEG.getValue(imageSizeCompPtr, 'i32'), // hard coded for now\n    perf_timetodecode: undefined,\n    pixelData: undefined\n  };\n\n  // Copy the data from the EMSCRIPTEN heap into the correct type array\n  var length = image.sx * image.sy * image.nbChannels;\n  var src32 = new Int32Array(openJPEG.HEAP32.buffer, imagePtr, length);\n\n  if (bytesPerPixel === 1) {\n    if (Uint8Array.from) {\n      image.pixelData = Uint8Array.from(src32);\n    } else {\n      image.pixelData = new Uint8Array(length);\n      for (var i = 0; i < length; i++) {\n        image.pixelData[i] = src32[i];\n      }\n    }\n  } else if (signed) {\n    if (Int16Array.from) {\n      image.pixelData = Int16Array.from(src32);\n    } else {\n      image.pixelData = new Int16Array(length);\n      for (var _i = 0; _i < length; _i++) {\n        image.pixelData[_i] = src32[_i];\n      }\n    }\n  } else if (Uint16Array.from) {\n    image.pixelData = Uint16Array.from(src32);\n  } else {\n    image.pixelData = new Uint16Array(length);\n    for (var _i2 = 0; _i2 < length; _i2++) {\n      image.pixelData[_i2] = src32[_i2];\n    }\n  }\n\n  var t1 = performance.now();\n\n  image.perf_timetodecode = t1 - t0;\n\n  // free\n  openJPEG._free(dataPtr);\n  openJPEG._free(imagePtrPtr);\n  openJPEG._free(imagePtr);\n  openJPEG._free(imageSizePtr);\n  openJPEG._free(imageSizeXPtr);\n  openJPEG._free(imageSizeYPtr);\n  openJPEG._free(imageSizeCompPtr);\n\n  return image;\n}\n\nfunction decodeOpenJpeg2000(imageFrame, pixelData) {\n  var bytesPerPixel = imageFrame.bitsAllocated <= 8 ? 1 : 2;\n  var signed = imageFrame.pixelRepresentation === 1;\n\n  var image = decodeOpenJPEG(pixelData, bytesPerPixel, signed);\n\n  imageFrame.columns = image.sx;\n  imageFrame.rows = image.sy;\n  imageFrame.pixelData = image.pixelData;\n  if (image.nbChannels > 1) {\n    imageFrame.photometricInterpretation = 'RGB';\n  }\n\n  return imageFrame;\n}\n\nfunction initializeJPEG2000(decodeConfig) {\n  // check to make sure codec is loaded\n  if (!decodeConfig.usePDFJS) {\n    if (typeof OpenJPEG === 'undefined') {\n      throw 'OpenJPEG decoder not loaded';\n    }\n  }\n\n  if (!openJPEG) {\n    openJPEG = OpenJPEG();\n    if (!openJPEG || !openJPEG._jp2_decode) {\n      throw 'OpenJPEG failed to initialize';\n    }\n  }\n}\n\nfunction decodeJPEG2000(imageFrame, pixelData, decodeConfig) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  initializeJPEG2000(decodeConfig);\n\n  if (options.usePDFJS || decodeConfig.usePDFJS) {\n    // OHIF image-JPEG2000 https://github.com/OHIF/image-JPEG2000\n    // console.log('PDFJS')\n    return decodeJpx(imageFrame, pixelData);\n  }\n\n  // OpenJPEG2000 https://github.com/jpambrun/openjpeg\n  // console.log('OpenJPEG')\n  return decodeOpenJpeg2000(imageFrame, pixelData);\n}\n\nexports.default = decodeJPEG2000;\nexports.initializeJPEG2000 = initializeJPEG2000;\n\n/***/ }),\n\n/***/ 38:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar charLS = void 0;\n\nfunction jpegLSDecode(data, isSigned) {\n  // prepare input parameters\n  var dataPtr = charLS._malloc(data.length);\n\n  charLS.writeArrayToMemory(data, dataPtr);\n\n  // prepare output parameters\n  var imagePtrPtr = charLS._malloc(4);\n  var imageSizePtr = charLS._malloc(4);\n  var widthPtr = charLS._malloc(4);\n  var heightPtr = charLS._malloc(4);\n  var bitsPerSamplePtr = charLS._malloc(4);\n  var stridePtr = charLS._malloc(4);\n  var allowedLossyErrorPtr = charLS._malloc(4);\n  var componentsPtr = charLS._malloc(4);\n  var interleaveModePtr = charLS._malloc(4);\n\n  // Decode the image\n  var result = charLS.ccall('jpegls_decode', 'number', ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number'], [dataPtr, data.length, imagePtrPtr, imageSizePtr, widthPtr, heightPtr, bitsPerSamplePtr, stridePtr, componentsPtr, allowedLossyErrorPtr, interleaveModePtr]);\n\n  // Extract result values into object\n  var image = {\n    result: result,\n    width: charLS.getValue(widthPtr, 'i32'),\n    height: charLS.getValue(heightPtr, 'i32'),\n    bitsPerSample: charLS.getValue(bitsPerSamplePtr, 'i32'),\n    stride: charLS.getValue(stridePtr, 'i32'),\n    components: charLS.getValue(componentsPtr, 'i32'),\n    allowedLossyError: charLS.getValue(allowedLossyErrorPtr, 'i32'),\n    interleaveMode: charLS.getValue(interleaveModePtr, 'i32'),\n    pixelData: undefined\n  };\n\n  // Copy image from emscripten heap into appropriate array buffer type\n  var imagePtr = charLS.getValue(imagePtrPtr, '*');\n\n  if (image.bitsPerSample <= 8) {\n    image.pixelData = new Uint8Array(image.width * image.height * image.components);\n    image.pixelData.set(new Uint8Array(charLS.HEAP8.buffer, imagePtr, image.pixelData.length));\n  } else if (isSigned) {\n    image.pixelData = new Int16Array(image.width * image.height * image.components);\n    image.pixelData.set(new Int16Array(charLS.HEAP16.buffer, imagePtr, image.pixelData.length));\n  } else {\n    image.pixelData = new Uint16Array(image.width * image.height * image.components);\n    image.pixelData.set(new Uint16Array(charLS.HEAP16.buffer, imagePtr, image.pixelData.length));\n  }\n\n  // free memory and return image object\n  charLS._free(dataPtr);\n  charLS._free(imagePtr);\n  charLS._free(imagePtrPtr);\n  charLS._free(imageSizePtr);\n  charLS._free(widthPtr);\n  charLS._free(heightPtr);\n  charLS._free(bitsPerSamplePtr);\n  charLS._free(stridePtr);\n  charLS._free(componentsPtr);\n  charLS._free(interleaveModePtr);\n\n  return image;\n}\n\nfunction initializeJPEGLS() {\n  // check to make sure codec is loaded\n  if (typeof CharLS === 'undefined') {\n    throw 'No JPEG-LS decoder loaded';\n  }\n\n  // Try to initialize CharLS\n  // CharLS https://github.com/chafey/charls\n  if (!charLS) {\n    charLS = CharLS();\n    if (!charLS || !charLS._jpegls_decode) {\n      throw 'JPEG-LS failed to initialize';\n    }\n  }\n}\n\nfunction decodeJPEGLS(imageFrame, pixelData) {\n  initializeJPEGLS();\n\n  var image = jpegLSDecode(pixelData, imageFrame.pixelRepresentation === 1);\n\n  // throw error if not success or too much data\n  if (image.result !== 0 && image.result !== 6) {\n    throw 'JPEG-LS decoder failed to decode frame (error code ' + image.result + ')';\n  }\n\n  imageFrame.columns = image.width;\n  imageFrame.rows = image.height;\n  imageFrame.pixelData = image.pixelData;\n\n  return imageFrame;\n}\n\nexports.default = decodeJPEGLS;\nexports.initializeJPEGLS = initializeJPEGLS;\n\n/***/ }),\n\n/***/ 56:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.version = exports.registerTaskHandler = undefined;\n\nvar _version = __webpack_require__(9);\n\nObject.defineProperty(exports, 'version', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_version).default;\n  }\n});\n\nvar _webWorker = __webpack_require__(57);\n\nvar _decodeTask = __webpack_require__(58);\n\nvar _decodeTask2 = _interopRequireDefault(_decodeTask);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// register our task\n(0, _webWorker.registerTaskHandler)(_decodeTask2.default);\n\nexports.registerTaskHandler = _webWorker.registerTaskHandler;\n\n/***/ }),\n\n/***/ 57:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.registerTaskHandler = registerTaskHandler;\n// an object of task handlers\nvar taskHandlers = {};\n\n// Flag to ensure web worker is only initialized once\nvar initialized = false;\n\n// the configuration object passed in when the web worker manager is initialized\nvar config = void 0;\n\n/**\n * Initialization function that loads additional web workers and initializes them\n * @param data\n */\nfunction initialize(data) {\n  // console.log('web worker initialize ', data.workerIndex);\n  // prevent initialization from happening more than once\n  if (initialized) {\n    return;\n  }\n\n  // save the config data\n  config = data.config;\n\n  // load any additional web worker tasks\n  if (data.config.webWorkerTaskPaths) {\n    for (var i = 0; i < data.config.webWorkerTaskPaths.length; i++) {\n      self.importScripts(data.config.webWorkerTaskPaths[i]);\n    }\n  }\n\n  // initialize each task handler\n  Object.keys(taskHandlers).forEach(function (key) {\n    taskHandlers[key].initialize(config.taskConfiguration);\n  });\n\n  // tell main ui thread that we have completed initialization\n  self.postMessage({\n    taskType: 'initialize',\n    status: 'success',\n    result: {},\n    workerIndex: data.workerIndex\n  });\n\n  initialized = true;\n}\n\n/**\n * Function exposed to web worker tasks to register themselves\n * @param taskHandler\n */\nfunction registerTaskHandler(taskHandler) {\n  if (taskHandlers[taskHandler.taskType]) {\n    console.log('attempt to register duplicate task handler \"', taskHandler.taskType, '\"');\n\n    return false;\n  }\n  taskHandlers[taskHandler.taskType] = taskHandler;\n  if (initialized) {\n    taskHandler.initialize(config.taskConfiguration);\n  }\n}\n\n/**\n * Function to load a new web worker task with updated configuration\n * @param data\n */\nfunction loadWebWorkerTask(data) {\n  config = data.config;\n  self.importScripts(data.sourcePath);\n}\n\n/**\n * Web worker message handler - dispatches messages to the registered task handlers\n * @param msg\n */\nself.onmessage = function (msg) {\n  // console.log('web worker onmessage', msg.data);\n\n  // handle initialize message\n  if (msg.data.taskType === 'initialize') {\n    initialize(msg.data);\n\n    return;\n  }\n\n  // handle loadWebWorkerTask message\n  if (msg.data.taskType === 'loadWebWorkerTask') {\n    loadWebWorkerTask(msg.data);\n\n    return;\n  }\n\n  // dispatch the message if there is a handler registered for it\n  if (taskHandlers[msg.data.taskType]) {\n    taskHandlers[msg.data.taskType].handler(msg.data, function (result, transferList) {\n      self.postMessage({\n        taskType: msg.data.taskType,\n        status: 'success',\n        result: result,\n        workerIndex: msg.data.workerIndex\n      }, transferList);\n    });\n\n    return;\n  }\n\n  // not task handler registered - send a failure message back to ui thread\n  console.log('no task handler for ', msg.data.taskType);\n  console.log(taskHandlers);\n  self.postMessage({\n    taskType: msg.data.taskType,\n    status: 'failed - no task handler registered',\n    workerIndex: msg.data.workerIndex\n  });\n};\n\n/***/ }),\n\n/***/ 58:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _decodeJPEG = __webpack_require__(37);\n\nvar _decodeJPEGLS = __webpack_require__(38);\n\nvar _getMinMax = __webpack_require__(2);\n\nvar _getMinMax2 = _interopRequireDefault(_getMinMax);\n\nvar _decodeImageFrame = __webpack_require__(59);\n\nvar _decodeImageFrame2 = _interopRequireDefault(_decodeImageFrame);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// flag to ensure codecs are loaded only once\nvar codecsLoaded = false;\n\n// the configuration object for the decodeTask\nvar decodeConfig = void 0;\n\n/**\n * Function to control loading and initializing the codecs\n * @param config\n */\nfunction loadCodecs(config) {\n  // prevent loading codecs more than once\n  if (codecsLoaded) {\n    return;\n  }\n\n  // Load the codecs\n  // console.time('loadCodecs');\n  self.importScripts(config.decodeTask.codecsPath);\n  codecsLoaded = true;\n  // console.timeEnd('loadCodecs');\n\n  // Initialize the codecs\n  if (config.decodeTask.initializeCodecsOnStartup) {\n    // console.time('initializeCodecs');\n    (0, _decodeJPEG.initializeJPEG2000)(config.decodeTask);\n    (0, _decodeJPEGLS.initializeJPEGLS)(config.decodeTask);\n    // console.timeEnd('initializeCodecs');\n  }\n}\n\n/**\n * Task initialization function\n */\nfunction decodeTaskInitialize(config) {\n  decodeConfig = config;\n  if (config.decodeTask.loadCodecsOnStartup) {\n    loadCodecs(config);\n  }\n}\n\nfunction calculateMinMax(imageFrame) {\n  var minMax = (0, _getMinMax2.default)(imageFrame.pixelData);\n\n  if (decodeConfig.decodeTask.strict === true) {\n    if (imageFrame.smallestPixelValue !== minMax.min) {\n      console.warn('Image smallestPixelValue tag is incorrect. Rendering performance will suffer considerably.');\n    }\n\n    if (imageFrame.largestPixelValue !== minMax.max) {\n      console.warn('Image largestPixelValue tag is incorrect. Rendering performance will suffer considerably.');\n    }\n  } else {\n    imageFrame.smallestPixelValue = minMax.min;\n    imageFrame.largestPixelValue = minMax.max;\n  }\n}\n\n/**\n * Task handler function\n */\nfunction decodeTaskHandler(data, doneCallback) {\n  // Load the codecs if they aren't already loaded\n  loadCodecs(decodeConfig);\n\n  var imageFrame = data.data.imageFrame;\n\n  // convert pixel data from ArrayBuffer to Uint8Array since web workers support passing ArrayBuffers but\n  // not typed arrays\n  var pixelData = new Uint8Array(data.data.pixelData);\n\n  (0, _decodeImageFrame2.default)(imageFrame, data.data.transferSyntax, pixelData, decodeConfig.decodeTask, data.data.options);\n\n  if (!imageFrame.pixelData) {\n    throw new Error('decodeTask: imageFrame.pixelData is undefined after decoding');\n  }\n\n  calculateMinMax(imageFrame);\n\n  // convert from TypedArray to ArrayBuffer since web workers support passing ArrayBuffers but not\n  // typed arrays\n  imageFrame.pixelData = imageFrame.pixelData.buffer;\n\n  // invoke the callback with our result and pass the pixelData in the transferList to move it to\n  // UI thread without making a copy\n  doneCallback(imageFrame, [imageFrame.pixelData]);\n}\n\nexports.default = {\n  taskType: 'decodeTask',\n  handler: decodeTaskHandler,\n  initialize: decodeTaskInitialize\n};\n\n/***/ }),\n\n/***/ 59:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _decodeLittleEndian = __webpack_require__(60);\n\nvar _decodeLittleEndian2 = _interopRequireDefault(_decodeLittleEndian);\n\nvar _decodeBigEndian = __webpack_require__(61);\n\nvar _decodeBigEndian2 = _interopRequireDefault(_decodeBigEndian);\n\nvar _decodeRLE = __webpack_require__(62);\n\nvar _decodeRLE2 = _interopRequireDefault(_decodeRLE);\n\nvar _decodeJPEGBaseline = __webpack_require__(63);\n\nvar _decodeJPEGBaseline2 = _interopRequireDefault(_decodeJPEGBaseline);\n\nvar _decodeJPEGLossless = __webpack_require__(64);\n\nvar _decodeJPEGLossless2 = _interopRequireDefault(_decodeJPEGLossless);\n\nvar _decodeJPEGLS = __webpack_require__(38);\n\nvar _decodeJPEGLS2 = _interopRequireDefault(_decodeJPEGLS);\n\nvar _decodeJPEG = __webpack_require__(37);\n\nvar _decodeJPEG2 = _interopRequireDefault(_decodeJPEG);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction decodeImageFrame(imageFrame, transferSyntax, pixelData, decodeConfig, options) {\n  var start = new Date().getTime();\n\n  if (transferSyntax === '1.2.840.10008.1.2') {\n    // Implicit VR Little Endian\n    imageFrame = (0, _decodeLittleEndian2.default)(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.1') {\n    // Explicit VR Little Endian\n    imageFrame = (0, _decodeLittleEndian2.default)(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.2') {\n    // Explicit VR Big Endian (retired)\n    imageFrame = (0, _decodeBigEndian2.default)(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.1.99') {\n    // Deflate transfer syntax (deflated by dicomParser)\n    imageFrame = (0, _decodeLittleEndian2.default)(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.5') {\n    // RLE Lossless\n    imageFrame = (0, _decodeRLE2.default)(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.50') {\n    // JPEG Baseline lossy process 1 (8 bit)\n    imageFrame = (0, _decodeJPEGBaseline2.default)(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.51') {\n    // JPEG Baseline lossy process 2 & 4 (12 bit)\n    imageFrame = (0, _decodeJPEGBaseline2.default)(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.57') {\n    // JPEG Lossless, Nonhierarchical (Processes 14)\n    imageFrame = (0, _decodeJPEGLossless2.default)(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.70') {\n    // JPEG Lossless, Nonhierarchical (Processes 14 [Selection 1])\n    imageFrame = (0, _decodeJPEGLossless2.default)(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.80') {\n    // JPEG-LS Lossless Image Compression\n    imageFrame = (0, _decodeJPEGLS2.default)(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.81') {\n    // JPEG-LS Lossy (Near-Lossless) Image Compression\n    imageFrame = (0, _decodeJPEGLS2.default)(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.90') {\n    // JPEG 2000 Lossless\n    imageFrame = (0, _decodeJPEG2.default)(imageFrame, pixelData, decodeConfig, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.91') {\n    // JPEG 2000 Lossy\n    imageFrame = (0, _decodeJPEG2.default)(imageFrame, pixelData, decodeConfig, options);\n  } else {\n    if (console && console.log) {\n      console.log('Image cannot be decoded due to Unsupported transfer syntax ' + transferSyntax);\n    }\n\n    throw 'no decoder for transfer syntax ' + transferSyntax;\n  }\n\n  /* Don't know if these work...\n   // JPEG 2000 Part 2 Multicomponent Image Compression (Lossless Only)\n   else if(transferSyntax === \"1.2.840.10008.1.2.4.92\")\n   {\n   return decodeJPEG2000(dataSet, frame);\n   }\n   // JPEG 2000 Part 2 Multicomponent Image Compression\n   else if(transferSyntax === \"1.2.840.10008.1.2.4.93\")\n   {\n   return decodeJPEG2000(dataSet, frame);\n   }\n   */\n\n  var end = new Date().getTime();\n\n  imageFrame.decodeTimeInMS = end - start;\n\n  return imageFrame;\n}\n\nexports.default = decodeImageFrame;\n\n/***/ }),\n\n/***/ 60:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction decodeLittleEndian(imageFrame, pixelData) {\n  if (imageFrame.bitsAllocated === 16) {\n    var arrayBuffer = pixelData.buffer;\n    var offset = pixelData.byteOffset;\n    var length = pixelData.length;\n    // if pixel data is not aligned on even boundary, shift it so we can create the 16 bit array\n    // buffers on it\n\n    if (offset % 2) {\n      arrayBuffer = arrayBuffer.slice(offset);\n      offset = 0;\n    }\n\n    if (imageFrame.pixelRepresentation === 0) {\n      imageFrame.pixelData = new Uint16Array(arrayBuffer, offset, length / 2);\n    } else {\n      imageFrame.pixelData = new Int16Array(arrayBuffer, offset, length / 2);\n    }\n  } else if (imageFrame.bitsAllocated === 8 || imageFrame.bitsAllocated === 1) {\n    imageFrame.pixelData = pixelData;\n  }\n\n  return imageFrame;\n}\n\nexports.default = decodeLittleEndian;\n\n/***/ }),\n\n/***/ 61:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* eslint no-bitwise: 0 */\nfunction swap16(val) {\n  return (val & 0xFF) << 8 | val >> 8 & 0xFF;\n}\n\nfunction decodeBigEndian(imageFrame, pixelData) {\n  if (imageFrame.bitsAllocated === 16) {\n    var arrayBuffer = pixelData.buffer;\n    var offset = pixelData.byteOffset;\n    var length = pixelData.length;\n    // if pixel data is not aligned on even boundary, shift it so we can create the 16 bit array\n    // buffers on it\n\n    if (offset % 2) {\n      arrayBuffer = arrayBuffer.slice(offset);\n      offset = 0;\n    }\n\n    if (imageFrame.pixelRepresentation === 0) {\n      imageFrame.pixelData = new Uint16Array(arrayBuffer, offset, length / 2);\n    } else {\n      imageFrame.pixelData = new Int16Array(arrayBuffer, offset, length / 2);\n    }\n    // Do the byte swap\n    for (var i = 0; i < imageFrame.pixelData.length; i++) {\n      imageFrame.pixelData[i] = swap16(imageFrame.pixelData[i]);\n    }\n  } else if (imageFrame.bitsAllocated === 8) {\n    imageFrame.pixelData = pixelData;\n  }\n\n  return imageFrame;\n}\n\nexports.default = decodeBigEndian;\n\n/***/ }),\n\n/***/ 62:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction decodeRLE(imageFrame, pixelData) {\n\n  if (imageFrame.bitsAllocated === 8) {\n    if (imageFrame.planarConfiguration) {\n      return decode8Planar(imageFrame, pixelData);\n    }\n\n    return decode8(imageFrame, pixelData);\n  } else if (imageFrame.bitsAllocated === 16) {\n    return decode16(imageFrame, pixelData);\n  }\n  throw 'unsupported pixel format for RLE';\n}\n\nfunction decode8(imageFrame, pixelData) {\n  var frameData = pixelData;\n  var frameSize = imageFrame.rows * imageFrame.columns;\n  var outFrame = new ArrayBuffer(frameSize * imageFrame.samplesPerPixel);\n  var header = new DataView(frameData.buffer, frameData.byteOffset);\n  var data = new Int8Array(frameData.buffer, frameData.byteOffset);\n  var out = new Int8Array(outFrame);\n\n  var outIndex = 0;\n  var numSegments = header.getInt32(0, true);\n\n  for (var s = 0; s < numSegments; ++s) {\n    outIndex = s;\n\n    var inIndex = header.getInt32((s + 1) * 4, true);\n    var maxIndex = header.getInt32((s + 2) * 4, true);\n\n    if (maxIndex === 0) {\n      maxIndex = frameData.length;\n    }\n\n    var endOfSegment = frameSize * numSegments;\n\n    while (inIndex < maxIndex) {\n      var n = data[inIndex++];\n\n      if (n >= 0 && n <= 127) {\n        // copy n bytes\n        for (var i = 0; i < n + 1 && outIndex < endOfSegment; ++i) {\n          out[outIndex] = data[inIndex++];\n          outIndex += imageFrame.samplesPerPixel;\n        }\n      } else if (n <= -1 && n >= -127) {\n        var value = data[inIndex++];\n        // run of n bytes\n\n        for (var j = 0; j < -n + 1 && outIndex < endOfSegment; ++j) {\n          out[outIndex] = value;\n          outIndex += imageFrame.samplesPerPixel;\n        }\n      } /* else if (n === -128) {\n        } // do nothing */\n    }\n  }\n  imageFrame.pixelData = new Uint8Array(outFrame);\n\n  return imageFrame;\n}\n\nfunction decode8Planar(imageFrame, pixelData) {\n  var frameData = pixelData;\n  var frameSize = imageFrame.rows * imageFrame.columns;\n  var outFrame = new ArrayBuffer(frameSize * imageFrame.samplesPerPixel);\n  var header = new DataView(frameData.buffer, frameData.byteOffset);\n  var data = new Int8Array(frameData.buffer, frameData.byteOffset);\n  var out = new Int8Array(outFrame);\n\n  var outIndex = 0;\n  var numSegments = header.getInt32(0, true);\n\n  for (var s = 0; s < numSegments; ++s) {\n    outIndex = s * frameSize;\n\n    var inIndex = header.getInt32((s + 1) * 4, true);\n    var maxIndex = header.getInt32((s + 2) * 4, true);\n\n    if (maxIndex === 0) {\n      maxIndex = frameData.length;\n    }\n\n    var endOfSegment = frameSize * numSegments;\n\n    while (inIndex < maxIndex) {\n      var n = data[inIndex++];\n\n      if (n >= 0 && n <= 127) {\n        // copy n bytes\n        for (var i = 0; i < n + 1 && outIndex < endOfSegment; ++i) {\n          out[outIndex] = data[inIndex++];\n          outIndex++;\n        }\n      } else if (n <= -1 && n >= -127) {\n        var value = data[inIndex++];\n        // run of n bytes\n\n        for (var j = 0; j < -n + 1 && outIndex < endOfSegment; ++j) {\n          out[outIndex] = value;\n          outIndex++;\n        }\n      } /* else if (n === -128) {\n        } // do nothing */\n    }\n  }\n  imageFrame.pixelData = new Uint8Array(outFrame);\n\n  return imageFrame;\n}\n\nfunction decode16(imageFrame, pixelData) {\n  var frameData = pixelData;\n  var frameSize = imageFrame.rows * imageFrame.columns;\n  var outFrame = new ArrayBuffer(frameSize * imageFrame.samplesPerPixel * 2);\n\n  var header = new DataView(frameData.buffer, frameData.byteOffset);\n  var data = new Int8Array(frameData.buffer, frameData.byteOffset);\n  var out = new Int8Array(outFrame);\n\n  var numSegments = header.getInt32(0, true);\n\n  for (var s = 0; s < numSegments; ++s) {\n    var outIndex = 0;\n    var highByte = s === 0 ? 1 : 0;\n\n    var inIndex = header.getInt32((s + 1) * 4, true);\n    var maxIndex = header.getInt32((s + 2) * 4, true);\n\n    if (maxIndex === 0) {\n      maxIndex = frameData.length;\n    }\n\n    while (inIndex < maxIndex) {\n      var n = data[inIndex++];\n\n      if (n >= 0 && n <= 127) {\n        for (var i = 0; i < n + 1 && outIndex < frameSize; ++i) {\n          out[outIndex * 2 + highByte] = data[inIndex++];\n          outIndex++;\n        }\n      } else if (n <= -1 && n >= -127) {\n        var value = data[inIndex++];\n\n        for (var j = 0; j < -n + 1 && outIndex < frameSize; ++j) {\n          out[outIndex * 2 + highByte] = value;\n          outIndex++;\n        }\n      } /* else if (n === -128) {\n        } // do nothing */\n    }\n  }\n  if (imageFrame.pixelRepresentation === 0) {\n    imageFrame.pixelData = new Uint16Array(outFrame);\n  } else {\n    imageFrame.pixelData = new Int16Array(outFrame);\n  }\n\n  return imageFrame;\n}\n\nexports.default = decodeRLE;\n\n/***/ }),\n\n/***/ 63:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n\nfunction decodeJPEGBaseline(imageFrame, pixelData) {\n  // check to make sure codec is loaded\n  if (typeof JpegImage === 'undefined') {\n    throw 'No JPEG Baseline decoder loaded';\n  }\n  var jpeg = new JpegImage();\n\n  jpeg.parse(pixelData);\n\n  // Do not use the internal jpeg.js color transformation,\n  // since we will handle this afterwards\n  jpeg.colorTransform = false;\n\n  if (imageFrame.bitsAllocated === 8) {\n    imageFrame.pixelData = jpeg.getData(imageFrame.columns, imageFrame.rows);\n\n    return imageFrame;\n  } else if (imageFrame.bitsAllocated === 16) {\n    imageFrame.pixelData = jpeg.getData16(imageFrame.columns, imageFrame.rows);\n\n    return imageFrame;\n  }\n}\n\nexports.default = decodeJPEGBaseline;\n\n/***/ }),\n\n/***/ 64:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n\nfunction decodeJPEGLossless(imageFrame, pixelData) {\n  // check to make sure codec is loaded\n  if (typeof jpeg === 'undefined' || typeof jpeg.lossless === 'undefined' || typeof jpeg.lossless.Decoder === 'undefined') {\n    throw 'No JPEG Lossless decoder loaded';\n  }\n\n  var byteOutput = imageFrame.bitsAllocated <= 8 ? 1 : 2;\n  // console.time('jpeglossless');\n  var buffer = pixelData.buffer;\n  var decoder = new jpeg.lossless.Decoder();\n  var decompressedData = decoder.decode(buffer, pixelData.byteOffset, pixelData.length, byteOutput);\n  // console.timeEnd('jpeglossless');\n\n  if (imageFrame.pixelRepresentation === 0) {\n    if (imageFrame.bitsAllocated === 16) {\n      imageFrame.pixelData = new Uint16Array(decompressedData.buffer);\n\n      return imageFrame;\n    }\n    // untested!\n    imageFrame.pixelData = new Uint8Array(decompressedData.buffer);\n\n    return imageFrame;\n  }\n  imageFrame.pixelData = new Int16Array(decompressedData.buffer);\n\n  return imageFrame;\n}\n\nexports.default = decodeJPEGLossless;\n\n/***/ }),\n\n/***/ 9:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = '1.0.1';\n\n/***/ })\n\n/******/ });\n});\n\n\n// WEBPACK FOOTER //\n// cornerstoneWADOImageLoaderWebWorker.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 56);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3fdf8141dcbbe6e6bb3f","function getMinMax (storedPixelData) {\n  // we always calculate the min max values since they are not always\n  // present in DICOM and we don't want to trust them anyway as cornerstone\n  // depends on us providing reliable values for these\n  let min = storedPixelData[0];\n  let max = storedPixelData[0];\n  let storedPixel;\n  const numPixels = storedPixelData.length;\n\n  for (let index = 1; index < numPixels; index++) {\n    storedPixel = storedPixelData[index];\n    min = Math.min(min, storedPixel);\n    max = Math.max(max, storedPixel);\n  }\n\n  return {\n    min,\n    max\n  };\n}\n\nexport default getMinMax;\n\n\n\n// WEBPACK FOOTER //\n// ./shared/getMinMax.js","function decodeJpx (imageFrame, pixelData) {\n  const jpxImage = new JpxImage();\n\n  jpxImage.parse(pixelData);\n\n  const tileCount = jpxImage.tiles.length;\n\n  if (tileCount !== 1) {\n    throw `JPEG2000 decoder returned a tileCount of ${tileCount}, when 1 is expected`;\n  }\n\n  imageFrame.columns = jpxImage.width;\n  imageFrame.rows = jpxImage.height;\n  imageFrame.pixelData = jpxImage.tiles[0].items;\n\n  return imageFrame;\n}\n\nlet openJPEG;\n\nfunction decodeOpenJPEG (data, bytesPerPixel, signed) {\n  const dataPtr = openJPEG._malloc(data.length);\n\n  openJPEG.writeArrayToMemory(data, dataPtr);\n\n  // create param outpout\n  const imagePtrPtr = openJPEG._malloc(4);\n  const imageSizePtr = openJPEG._malloc(4);\n  const imageSizeXPtr = openJPEG._malloc(4);\n  const imageSizeYPtr = openJPEG._malloc(4);\n  const imageSizeCompPtr = openJPEG._malloc(4);\n\n  const t0 = performance.now();\n  const ret = openJPEG.ccall('jp2_decode', 'number', ['number', 'number', 'number', 'number', 'number', 'number', 'number'],\n    [dataPtr, data.length, imagePtrPtr, imageSizePtr, imageSizeXPtr, imageSizeYPtr, imageSizeCompPtr]);\n  // add num vomp..etc\n\n  if (ret !== 0) {\n    console.log('[opj_decode] decoding failed!');\n    openJPEG._free(dataPtr);\n    openJPEG._free(openJPEG.getValue(imagePtrPtr, '*'));\n    openJPEG._free(imageSizeXPtr);\n    openJPEG._free(imageSizeYPtr);\n    openJPEG._free(imageSizePtr);\n    openJPEG._free(imageSizeCompPtr);\n\n    return;\n  }\n\n  const imagePtr = openJPEG.getValue(imagePtrPtr, '*');\n\n  const image = {\n    length: openJPEG.getValue(imageSizePtr, 'i32'),\n    sx: openJPEG.getValue(imageSizeXPtr, 'i32'),\n    sy: openJPEG.getValue(imageSizeYPtr, 'i32'),\n    nbChannels: openJPEG.getValue(imageSizeCompPtr, 'i32'), // hard coded for now\n    perf_timetodecode: undefined,\n    pixelData: undefined\n  };\n\n  // Copy the data from the EMSCRIPTEN heap into the correct type array\n  const length = image.sx * image.sy * image.nbChannels;\n  const src32 = new Int32Array(openJPEG.HEAP32.buffer, imagePtr, length);\n\n  if (bytesPerPixel === 1) {\n    if (Uint8Array.from) {\n      image.pixelData = Uint8Array.from(src32);\n    } else {\n      image.pixelData = new Uint8Array(length);\n      for (let i = 0; i < length; i++) {\n        image.pixelData[i] = src32[i];\n      }\n    }\n  } else if (signed) {\n    if (Int16Array.from) {\n      image.pixelData = Int16Array.from(src32);\n    } else {\n      image.pixelData = new Int16Array(length);\n      for (let i = 0; i < length; i++) {\n        image.pixelData[i] = src32[i];\n      }\n    }\n  } else if (Uint16Array.from) {\n    image.pixelData = Uint16Array.from(src32);\n  } else {\n    image.pixelData = new Uint16Array(length);\n    for (let i = 0; i < length; i++) {\n      image.pixelData[i] = src32[i];\n    }\n  }\n\n  const t1 = performance.now();\n\n  image.perf_timetodecode = t1 - t0;\n\n  // free\n  openJPEG._free(dataPtr);\n  openJPEG._free(imagePtrPtr);\n  openJPEG._free(imagePtr);\n  openJPEG._free(imageSizePtr);\n  openJPEG._free(imageSizeXPtr);\n  openJPEG._free(imageSizeYPtr);\n  openJPEG._free(imageSizeCompPtr);\n\n  return image;\n}\n\nfunction decodeOpenJpeg2000 (imageFrame, pixelData) {\n  const bytesPerPixel = imageFrame.bitsAllocated <= 8 ? 1 : 2;\n  const signed = imageFrame.pixelRepresentation === 1;\n\n  const image = decodeOpenJPEG(pixelData, bytesPerPixel, signed);\n\n  imageFrame.columns = image.sx;\n  imageFrame.rows = image.sy;\n  imageFrame.pixelData = image.pixelData;\n  if (image.nbChannels > 1) {\n    imageFrame.photometricInterpretation = 'RGB';\n  }\n\n  return imageFrame;\n}\n\nfunction initializeJPEG2000 (decodeConfig) {\n  // check to make sure codec is loaded\n  if (!decodeConfig.usePDFJS) {\n    if (typeof OpenJPEG === 'undefined') {\n      throw 'OpenJPEG decoder not loaded';\n    }\n  }\n\n  if (!openJPEG) {\n    openJPEG = OpenJPEG();\n    if (!openJPEG || !openJPEG._jp2_decode) {\n      throw 'OpenJPEG failed to initialize';\n    }\n  }\n}\n\nfunction decodeJPEG2000 (imageFrame, pixelData, decodeConfig, options = {}) {\n  initializeJPEG2000(decodeConfig);\n\n  if (options.usePDFJS || decodeConfig.usePDFJS) {\n    // OHIF image-JPEG2000 https://github.com/OHIF/image-JPEG2000\n    // console.log('PDFJS')\n    return decodeJpx(imageFrame, pixelData);\n  }\n\n  // OpenJPEG2000 https://github.com/jpambrun/openjpeg\n  // console.log('OpenJPEG')\n  return decodeOpenJpeg2000(imageFrame, pixelData);\n}\n\nexport default decodeJPEG2000;\nexport { initializeJPEG2000 };\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/decodeTask/decoders/decodeJPEG2000.js","let charLS;\n\nfunction jpegLSDecode (data, isSigned) {\n  // prepare input parameters\n  const dataPtr = charLS._malloc(data.length);\n\n  charLS.writeArrayToMemory(data, dataPtr);\n\n  // prepare output parameters\n  const imagePtrPtr = charLS._malloc(4);\n  const imageSizePtr = charLS._malloc(4);\n  const widthPtr = charLS._malloc(4);\n  const heightPtr = charLS._malloc(4);\n  const bitsPerSamplePtr = charLS._malloc(4);\n  const stridePtr = charLS._malloc(4);\n  const allowedLossyErrorPtr = charLS._malloc(4);\n  const componentsPtr = charLS._malloc(4);\n  const interleaveModePtr = charLS._malloc(4);\n\n  // Decode the image\n  const result = charLS.ccall(\n    'jpegls_decode',\n    'number',\n    ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number'],\n    [dataPtr, data.length, imagePtrPtr, imageSizePtr, widthPtr, heightPtr, bitsPerSamplePtr, stridePtr, componentsPtr, allowedLossyErrorPtr, interleaveModePtr]\n  );\n\n  // Extract result values into object\n  const image = {\n    result,\n    width: charLS.getValue(widthPtr, 'i32'),\n    height: charLS.getValue(heightPtr, 'i32'),\n    bitsPerSample: charLS.getValue(bitsPerSamplePtr, 'i32'),\n    stride: charLS.getValue(stridePtr, 'i32'),\n    components: charLS.getValue(componentsPtr, 'i32'),\n    allowedLossyError: charLS.getValue(allowedLossyErrorPtr, 'i32'),\n    interleaveMode: charLS.getValue(interleaveModePtr, 'i32'),\n    pixelData: undefined\n  };\n\n  // Copy image from emscripten heap into appropriate array buffer type\n  const imagePtr = charLS.getValue(imagePtrPtr, '*');\n\n  if (image.bitsPerSample <= 8) {\n    image.pixelData = new Uint8Array(image.width * image.height * image.components);\n    image.pixelData.set(new Uint8Array(charLS.HEAP8.buffer, imagePtr, image.pixelData.length));\n  } else if (isSigned) {\n    image.pixelData = new Int16Array(image.width * image.height * image.components);\n    image.pixelData.set(new Int16Array(charLS.HEAP16.buffer, imagePtr, image.pixelData.length));\n  } else {\n    image.pixelData = new Uint16Array(image.width * image.height * image.components);\n    image.pixelData.set(new Uint16Array(charLS.HEAP16.buffer, imagePtr, image.pixelData.length));\n  }\n\n  // free memory and return image object\n  charLS._free(dataPtr);\n  charLS._free(imagePtr);\n  charLS._free(imagePtrPtr);\n  charLS._free(imageSizePtr);\n  charLS._free(widthPtr);\n  charLS._free(heightPtr);\n  charLS._free(bitsPerSamplePtr);\n  charLS._free(stridePtr);\n  charLS._free(componentsPtr);\n  charLS._free(interleaveModePtr);\n\n  return image;\n}\n\nfunction initializeJPEGLS () {\n  // check to make sure codec is loaded\n  if (typeof CharLS === 'undefined') {\n    throw 'No JPEG-LS decoder loaded';\n  }\n\n  // Try to initialize CharLS\n  // CharLS https://github.com/chafey/charls\n  if (!charLS) {\n    charLS = CharLS();\n    if (!charLS || !charLS._jpegls_decode) {\n      throw 'JPEG-LS failed to initialize';\n    }\n  }\n\n}\n\nfunction decodeJPEGLS (imageFrame, pixelData) {\n  initializeJPEGLS();\n\n  const image = jpegLSDecode(pixelData, imageFrame.pixelRepresentation === 1);\n\n  // throw error if not success or too much data\n  if (image.result !== 0 && image.result !== 6) {\n    throw `JPEG-LS decoder failed to decode frame (error code ${image.result})`;\n  }\n\n  imageFrame.columns = image.width;\n  imageFrame.rows = image.height;\n  imageFrame.pixelData = image.pixelData;\n\n  return imageFrame;\n}\n\nexport default decodeJPEGLS;\nexport { initializeJPEGLS };\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/decodeTask/decoders/decodeJPEGLS.js","import { registerTaskHandler } from './webWorker.js';\nimport decodeTask from './decodeTask/decodeTask.js';\n\n// register our task\nregisterTaskHandler(decodeTask);\n\nexport { registerTaskHandler };\nexport { default as version } from '../version.js';\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/index.js","// an object of task handlers\nconst taskHandlers = {};\n\n// Flag to ensure web worker is only initialized once\nlet initialized = false;\n\n// the configuration object passed in when the web worker manager is initialized\nlet config;\n\n/**\n * Initialization function that loads additional web workers and initializes them\n * @param data\n */\nfunction initialize (data) {\n  // console.log('web worker initialize ', data.workerIndex);\n  // prevent initialization from happening more than once\n  if (initialized) {\n    return;\n  }\n\n  // save the config data\n  config = data.config;\n\n  // load any additional web worker tasks\n  if (data.config.webWorkerTaskPaths) {\n    for (let i = 0; i < data.config.webWorkerTaskPaths.length; i++) {\n      self.importScripts(data.config.webWorkerTaskPaths[i]);\n    }\n  }\n\n  // initialize each task handler\n  Object.keys(taskHandlers).forEach(function (key) {\n    taskHandlers[key].initialize(config.taskConfiguration);\n  });\n\n  // tell main ui thread that we have completed initialization\n  self.postMessage({\n    taskType: 'initialize',\n    status: 'success',\n    result: {\n    },\n    workerIndex: data.workerIndex\n  });\n\n  initialized = true;\n}\n\n/**\n * Function exposed to web worker tasks to register themselves\n * @param taskHandler\n */\nexport function registerTaskHandler (taskHandler) {\n  if (taskHandlers[taskHandler.taskType]) {\n    console.log('attempt to register duplicate task handler \"', taskHandler.taskType, '\"');\n\n    return false;\n  }\n  taskHandlers[taskHandler.taskType] = taskHandler;\n  if (initialized) {\n    taskHandler.initialize(config.taskConfiguration);\n  }\n}\n\n/**\n * Function to load a new web worker task with updated configuration\n * @param data\n */\nfunction loadWebWorkerTask (data) {\n  config = data.config;\n  self.importScripts(data.sourcePath);\n}\n\n/**\n * Web worker message handler - dispatches messages to the registered task handlers\n * @param msg\n */\nself.onmessage = function (msg) {\n  // console.log('web worker onmessage', msg.data);\n\n  // handle initialize message\n  if (msg.data.taskType === 'initialize') {\n    initialize(msg.data);\n\n    return;\n  }\n\n  // handle loadWebWorkerTask message\n  if (msg.data.taskType === 'loadWebWorkerTask') {\n    loadWebWorkerTask(msg.data);\n\n    return;\n  }\n\n  // dispatch the message if there is a handler registered for it\n  if (taskHandlers[msg.data.taskType]) {\n    taskHandlers[msg.data.taskType].handler(msg.data, function (result, transferList) {\n      self.postMessage({\n        taskType: msg.data.taskType,\n        status: 'success',\n        result,\n        workerIndex: msg.data.workerIndex\n      }, transferList);\n    });\n\n    return;\n  }\n\n  // not task handler registered - send a failure message back to ui thread\n  console.log('no task handler for ', msg.data.taskType);\n  console.log(taskHandlers);\n  self.postMessage({\n    taskType: msg.data.taskType,\n    status: 'failed - no task handler registered',\n    workerIndex: msg.data.workerIndex\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/webWorker.js","import { initializeJPEG2000 } from './decoders/decodeJPEG2000.js';\nimport { initializeJPEGLS } from './decoders/decodeJPEGLS.js';\nimport getMinMax from '../../shared/getMinMax.js';\nimport decodeImageFrame from './decodeImageFrame.js';\n\n// flag to ensure codecs are loaded only once\nlet codecsLoaded = false;\n\n// the configuration object for the decodeTask\nlet decodeConfig;\n\n/**\n * Function to control loading and initializing the codecs\n * @param config\n */\nfunction loadCodecs (config) {\n  // prevent loading codecs more than once\n  if (codecsLoaded) {\n    return;\n  }\n\n  // Load the codecs\n  // console.time('loadCodecs');\n  self.importScripts(config.decodeTask.codecsPath);\n  codecsLoaded = true;\n  // console.timeEnd('loadCodecs');\n\n  // Initialize the codecs\n  if (config.decodeTask.initializeCodecsOnStartup) {\n    // console.time('initializeCodecs');\n    initializeJPEG2000(config.decodeTask);\n    initializeJPEGLS(config.decodeTask);\n    // console.timeEnd('initializeCodecs');\n  }\n}\n\n/**\n * Task initialization function\n */\nfunction decodeTaskInitialize (config) {\n  decodeConfig = config;\n  if (config.decodeTask.loadCodecsOnStartup) {\n    loadCodecs(config);\n  }\n}\n\nfunction calculateMinMax (imageFrame) {\n  const minMax = getMinMax(imageFrame.pixelData);\n\n  if (decodeConfig.decodeTask.strict === true) {\n    if (imageFrame.smallestPixelValue !== minMax.min) {\n      console.warn('Image smallestPixelValue tag is incorrect. Rendering performance will suffer considerably.');\n    }\n\n    if (imageFrame.largestPixelValue !== minMax.max) {\n      console.warn('Image largestPixelValue tag is incorrect. Rendering performance will suffer considerably.');\n    }\n  } else {\n    imageFrame.smallestPixelValue = minMax.min;\n    imageFrame.largestPixelValue = minMax.max;\n  }\n}\n\n/**\n * Task handler function\n */\nfunction decodeTaskHandler (data, doneCallback) {\n  // Load the codecs if they aren't already loaded\n  loadCodecs(decodeConfig);\n\n  const imageFrame = data.data.imageFrame;\n\n  // convert pixel data from ArrayBuffer to Uint8Array since web workers support passing ArrayBuffers but\n  // not typed arrays\n  const pixelData = new Uint8Array(data.data.pixelData);\n\n  decodeImageFrame(\n    imageFrame,\n    data.data.transferSyntax,\n    pixelData,\n    decodeConfig.decodeTask,\n    data.data.options);\n\n  if (!imageFrame.pixelData) {\n    throw new Error('decodeTask: imageFrame.pixelData is undefined after decoding');\n  }\n\n  calculateMinMax(imageFrame);\n\n  // convert from TypedArray to ArrayBuffer since web workers support passing ArrayBuffers but not\n  // typed arrays\n  imageFrame.pixelData = imageFrame.pixelData.buffer;\n\n  // invoke the callback with our result and pass the pixelData in the transferList to move it to\n  // UI thread without making a copy\n  doneCallback(imageFrame, [imageFrame.pixelData]);\n}\n\nexport default {\n  taskType: 'decodeTask',\n  handler: decodeTaskHandler,\n  initialize: decodeTaskInitialize\n};\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/decodeTask/decodeTask.js","import decodeLittleEndian from './decoders/decodeLittleEndian.js';\nimport decodeBigEndian from './decoders/decodeBigEndian.js';\nimport decodeRLE from './decoders/decodeRLE.js';\nimport decodeJPEGBaseline from './decoders/decodeJPEGBaseline.js';\nimport decodeJPEGLossless from './decoders/decodeJPEGLossless.js';\nimport decodeJPEGLS from './decoders/decodeJPEGLS.js';\nimport decodeJPEG2000 from './decoders/decodeJPEG2000.js';\n\nfunction decodeImageFrame (imageFrame, transferSyntax, pixelData, decodeConfig, options) {\n  const start = new Date().getTime();\n\n  if (transferSyntax === '1.2.840.10008.1.2') {\n    // Implicit VR Little Endian\n    imageFrame = decodeLittleEndian(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.1') {\n    // Explicit VR Little Endian\n    imageFrame = decodeLittleEndian(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.2') {\n    // Explicit VR Big Endian (retired)\n    imageFrame = decodeBigEndian(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.1.99') {\n    // Deflate transfer syntax (deflated by dicomParser)\n    imageFrame = decodeLittleEndian(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.5') {\n    // RLE Lossless\n    imageFrame = decodeRLE(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.50') {\n    // JPEG Baseline lossy process 1 (8 bit)\n    imageFrame = decodeJPEGBaseline(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.51') {\n    // JPEG Baseline lossy process 2 & 4 (12 bit)\n    imageFrame = decodeJPEGBaseline(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.57') {\n    // JPEG Lossless, Nonhierarchical (Processes 14)\n    imageFrame = decodeJPEGLossless(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.70') {\n    // JPEG Lossless, Nonhierarchical (Processes 14 [Selection 1])\n    imageFrame = decodeJPEGLossless(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.80') {\n    // JPEG-LS Lossless Image Compression\n    imageFrame = decodeJPEGLS(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.81') {\n    // JPEG-LS Lossy (Near-Lossless) Image Compression\n    imageFrame = decodeJPEGLS(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.90') {\n    // JPEG 2000 Lossless\n    imageFrame = decodeJPEG2000(imageFrame, pixelData, decodeConfig, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.91') {\n    // JPEG 2000 Lossy\n    imageFrame = decodeJPEG2000(imageFrame, pixelData, decodeConfig, options);\n  } else {\n    if (console && console.log) {\n      console.log(`Image cannot be decoded due to Unsupported transfer syntax ${transferSyntax}`);\n    }\n\n    throw `no decoder for transfer syntax ${transferSyntax}`;\n  }\n\n  /* Don't know if these work...\n   // JPEG 2000 Part 2 Multicomponent Image Compression (Lossless Only)\n   else if(transferSyntax === \"1.2.840.10008.1.2.4.92\")\n   {\n   return decodeJPEG2000(dataSet, frame);\n   }\n   // JPEG 2000 Part 2 Multicomponent Image Compression\n   else if(transferSyntax === \"1.2.840.10008.1.2.4.93\")\n   {\n   return decodeJPEG2000(dataSet, frame);\n   }\n   */\n\n  const end = new Date().getTime();\n\n  imageFrame.decodeTimeInMS = end - start;\n\n  return imageFrame;\n}\n\nexport default decodeImageFrame;\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/decodeTask/decodeImageFrame.js","function decodeLittleEndian (imageFrame, pixelData) {\n  if (imageFrame.bitsAllocated === 16) {\n    let arrayBuffer = pixelData.buffer;\n    let offset = pixelData.byteOffset;\n    const length = pixelData.length;\n    // if pixel data is not aligned on even boundary, shift it so we can create the 16 bit array\n    // buffers on it\n\n    if (offset % 2) {\n      arrayBuffer = arrayBuffer.slice(offset);\n      offset = 0;\n    }\n\n    if (imageFrame.pixelRepresentation === 0) {\n      imageFrame.pixelData = new Uint16Array(arrayBuffer, offset, length / 2);\n    } else {\n      imageFrame.pixelData = new Int16Array(arrayBuffer, offset, length / 2);\n    }\n  } else if (imageFrame.bitsAllocated === 8 || imageFrame.bitsAllocated === 1) {\n    imageFrame.pixelData = pixelData;\n  }\n\n  return imageFrame;\n}\n\nexport default decodeLittleEndian;\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/decodeTask/decoders/decodeLittleEndian.js","/* eslint no-bitwise: 0 */\nfunction swap16 (val) {\n  return ((val & 0xFF) << 8) |\n    ((val >> 8) & 0xFF);\n}\n\n\nfunction decodeBigEndian (imageFrame, pixelData) {\n  if (imageFrame.bitsAllocated === 16) {\n    let arrayBuffer = pixelData.buffer;\n    let offset = pixelData.byteOffset;\n    const length = pixelData.length;\n    // if pixel data is not aligned on even boundary, shift it so we can create the 16 bit array\n    // buffers on it\n\n    if (offset % 2) {\n      arrayBuffer = arrayBuffer.slice(offset);\n      offset = 0;\n    }\n\n    if (imageFrame.pixelRepresentation === 0) {\n      imageFrame.pixelData = new Uint16Array(arrayBuffer, offset, length / 2);\n    } else {\n      imageFrame.pixelData = new Int16Array(arrayBuffer, offset, length / 2);\n    }\n    // Do the byte swap\n    for (let i = 0; i < imageFrame.pixelData.length; i++) {\n      imageFrame.pixelData[i] = swap16(imageFrame.pixelData[i]);\n    }\n\n  } else if (imageFrame.bitsAllocated === 8) {\n    imageFrame.pixelData = pixelData;\n  }\n\n  return imageFrame;\n}\n\nexport default decodeBigEndian;\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/decodeTask/decoders/decodeBigEndian.js","function decodeRLE (imageFrame, pixelData) {\n\n  if (imageFrame.bitsAllocated === 8) {\n    if (imageFrame.planarConfiguration) {\n      return decode8Planar(imageFrame, pixelData);\n    }\n\n    return decode8(imageFrame, pixelData);\n  } else if (imageFrame.bitsAllocated === 16) {\n    return decode16(imageFrame, pixelData);\n  }\n  throw 'unsupported pixel format for RLE';\n\n}\n\nfunction decode8 (imageFrame, pixelData) {\n  const frameData = pixelData;\n  const frameSize = imageFrame.rows * imageFrame.columns;\n  const outFrame = new ArrayBuffer(frameSize * imageFrame.samplesPerPixel);\n  const header = new DataView(frameData.buffer, frameData.byteOffset);\n  const data = new Int8Array(frameData.buffer, frameData.byteOffset);\n  const out = new Int8Array(outFrame);\n\n  let outIndex = 0;\n  const numSegments = header.getInt32(0, true);\n\n  for (let s = 0; s < numSegments; ++s) {\n    outIndex = s;\n\n    let inIndex = header.getInt32((s + 1) * 4, true);\n    let maxIndex = header.getInt32((s + 2) * 4, true);\n\n    if (maxIndex === 0) {\n      maxIndex = frameData.length;\n    }\n\n    const endOfSegment = frameSize * numSegments;\n\n    while (inIndex < maxIndex) {\n      const n = data[inIndex++];\n\n      if (n >= 0 && n <= 127) {\n        // copy n bytes\n        for (let i = 0; i < n + 1 && outIndex < endOfSegment; ++i) {\n          out[outIndex] = data[inIndex++];\n          outIndex += imageFrame.samplesPerPixel;\n        }\n      } else if (n <= -1 && n >= -127) {\n        const value = data[inIndex++];\n        // run of n bytes\n\n        for (let j = 0; j < -n + 1 && outIndex < endOfSegment; ++j) {\n          out[outIndex] = value;\n          outIndex += imageFrame.samplesPerPixel;\n        }\n      }/* else if (n === -128) {\n\n      } // do nothing */\n    }\n  }\n  imageFrame.pixelData = new Uint8Array(outFrame);\n\n  return imageFrame;\n}\n\nfunction decode8Planar (imageFrame, pixelData) {\n  const frameData = pixelData;\n  const frameSize = imageFrame.rows * imageFrame.columns;\n  const outFrame = new ArrayBuffer(frameSize * imageFrame.samplesPerPixel);\n  const header = new DataView(frameData.buffer, frameData.byteOffset);\n  const data = new Int8Array(frameData.buffer, frameData.byteOffset);\n  const out = new Int8Array(outFrame);\n\n  let outIndex = 0;\n  const numSegments = header.getInt32(0, true);\n\n  for (let s = 0; s < numSegments; ++s) {\n    outIndex = s * frameSize;\n\n    let inIndex = header.getInt32((s + 1) * 4, true);\n    let maxIndex = header.getInt32((s + 2) * 4, true);\n\n    if (maxIndex === 0) {\n      maxIndex = frameData.length;\n    }\n\n    const endOfSegment = frameSize * numSegments;\n\n    while (inIndex < maxIndex) {\n      const n = data[inIndex++];\n\n      if (n >= 0 && n <= 127) {\n        // copy n bytes\n        for (let i = 0; i < n + 1 && outIndex < endOfSegment; ++i) {\n          out[outIndex] = data[inIndex++];\n          outIndex++;\n        }\n      } else if (n <= -1 && n >= -127) {\n        const value = data[inIndex++];\n        // run of n bytes\n\n        for (let j = 0; j < -n + 1 && outIndex < endOfSegment; ++j) {\n          out[outIndex] = value;\n          outIndex++;\n        }\n      }/* else if (n === -128) {\n\n      } // do nothing */\n    }\n  }\n  imageFrame.pixelData = new Uint8Array(outFrame);\n\n  return imageFrame;\n}\n\nfunction decode16 (imageFrame, pixelData) {\n  const frameData = pixelData;\n  const frameSize = imageFrame.rows * imageFrame.columns;\n  const outFrame = new ArrayBuffer(frameSize * imageFrame.samplesPerPixel * 2);\n\n  const header = new DataView(frameData.buffer, frameData.byteOffset);\n  const data = new Int8Array(frameData.buffer, frameData.byteOffset);\n  const out = new Int8Array(outFrame);\n\n  const numSegments = header.getInt32(0, true);\n\n  for (let s = 0; s < numSegments; ++s) {\n    let outIndex = 0;\n    const highByte = (s === 0 ? 1 : 0);\n\n    let inIndex = header.getInt32((s + 1) * 4, true);\n    let maxIndex = header.getInt32((s + 2) * 4, true);\n\n    if (maxIndex === 0) {\n      maxIndex = frameData.length;\n    }\n\n    while (inIndex < maxIndex) {\n      const n = data[inIndex++];\n\n      if (n >= 0 && n <= 127) {\n        for (let i = 0; i < n + 1 && outIndex < frameSize; ++i) {\n          out[(outIndex * 2) + highByte] = data[inIndex++];\n          outIndex++;\n        }\n      } else if (n <= -1 && n >= -127) {\n        const value = data[inIndex++];\n\n        for (let j = 0; j < -n + 1 && outIndex < frameSize; ++j) {\n          out[(outIndex * 2) + highByte] = value;\n          outIndex++;\n        }\n      }/* else if (n === -128) {\n\n      } // do nothing */\n    }\n  }\n  if (imageFrame.pixelRepresentation === 0) {\n    imageFrame.pixelData = new Uint16Array(outFrame);\n  } else {\n    imageFrame.pixelData = new Int16Array(outFrame);\n  }\n\n  return imageFrame;\n}\n\nexport default decodeRLE;\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/decodeTask/decoders/decodeRLE.js","\n\nfunction decodeJPEGBaseline (imageFrame, pixelData) {\n  // check to make sure codec is loaded\n  if (typeof JpegImage === 'undefined') {\n    throw 'No JPEG Baseline decoder loaded';\n  }\n  const jpeg = new JpegImage();\n\n  jpeg.parse(pixelData);\n\n  // Do not use the internal jpeg.js color transformation,\n  // since we will handle this afterwards\n  jpeg.colorTransform = false;\n\n  if (imageFrame.bitsAllocated === 8) {\n    imageFrame.pixelData = jpeg.getData(imageFrame.columns, imageFrame.rows);\n\n    return imageFrame;\n  } else if (imageFrame.bitsAllocated === 16) {\n    imageFrame.pixelData = jpeg.getData16(imageFrame.columns, imageFrame.rows);\n\n    return imageFrame;\n  }\n}\n\nexport default decodeJPEGBaseline;\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/decodeTask/decoders/decodeJPEGBaseline.js","\n\nfunction decodeJPEGLossless (imageFrame, pixelData) {\n  // check to make sure codec is loaded\n  if (typeof jpeg === 'undefined' ||\n    typeof jpeg.lossless === 'undefined' ||\n    typeof jpeg.lossless.Decoder === 'undefined') {\n    throw 'No JPEG Lossless decoder loaded';\n  }\n\n  const byteOutput = imageFrame.bitsAllocated <= 8 ? 1 : 2;\n  // console.time('jpeglossless');\n  const buffer = pixelData.buffer;\n  const decoder = new jpeg.lossless.Decoder();\n  const decompressedData = decoder.decode(buffer, pixelData.byteOffset, pixelData.length, byteOutput);\n  // console.timeEnd('jpeglossless');\n\n  if (imageFrame.pixelRepresentation === 0) {\n    if (imageFrame.bitsAllocated === 16) {\n      imageFrame.pixelData = new Uint16Array(decompressedData.buffer);\n\n      return imageFrame;\n    }\n    // untested!\n    imageFrame.pixelData = new Uint8Array(decompressedData.buffer);\n\n    return imageFrame;\n\n  }\n  imageFrame.pixelData = new Int16Array(decompressedData.buffer);\n\n  return imageFrame;\n\n}\n\nexport default decodeJPEGLossless;\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/decodeTask/decoders/decodeJPEGLossless.js","export default '1.0.1';\n\n\n\n// WEBPACK FOOTER //\n// ./version.js"],"sourceRoot":""}