{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///webpack/bootstrap 82f3a0fe3908a4a7714c?7916","webpack:///./version.js?a0dd","webpack:///./webWorker/decodeTask/decoders/decodeJPEG2000.js","webpack:///./webWorker/decodeTask/decoders/decodeJPEGLS.js","webpack:///./webWorker/decodeTask/decodeTask.js","webpack:///./webWorker/webWorker.js","webpack:///./webWorker/decodeTask/decodeImageFrame.js","webpack:///./webWorker/decodeTask/decoders/decodeBigEndian.js","webpack:///./webWorker/decodeTask/decoders/decodeJPEGBaseline.js","webpack:///./webWorker/decodeTask/decoders/decodeJPEGLossless.js","webpack:///./webWorker/decodeTask/decoders/decodeLittleEndian.js","webpack:///./webWorker/decodeTask/decoders/decodeRLE.js","webpack:///./webWorker/decodeTask/getMinMax.js","webpack:///./webWorker/index.js"],"names":["decodeJpx","imageFrame","pixelData","jpxImage","JpxImage","parse","tileCount","tiles","length","columns","width","rows","height","items","openJPEG","decodeOpenJPEG","data","bytesPerPixel","signed","dataPtr","_malloc","writeArrayToMemory","imagePtrPtr","imageSizePtr","imageSizeXPtr","imageSizeYPtr","imageSizeCompPtr","t0","Date","now","ret","ccall","console","log","_free","getValue","undefined","imagePtr","image","sx","sy","nbChannels","perf_timetodecode","src32","Int32Array","HEAP32","buffer","Uint8Array","from","i","Int16Array","Uint16Array","t1","decodeOpenJpeg2000","bitsAllocated","pixelRepresentation","photometricInterpretation","initializeJPEG2000","decodeConfig","usePDFJS","OpenJPEG","_jp2_decode","decodeJPEG2000","options","charLS","jpegLSDecode","isSigned","widthPtr","heightPtr","bitsPerSamplePtr","stridePtr","allowedLossyErrorPtr","componentsPtr","interleaveModePtr","result","bitsPerSample","stride","components","allowedLossyError","interleaveMode","set","HEAP8","HEAP16","initializeJPEGLS","CharLS","_jpegls_decode","decodeJPEGLS","codecsLoaded","loadCodecs","config","self","importScripts","decodeTask","codecsPath","initializeCodecsOnStartup","decodeTaskInitialize","loadCodecsOnStartup","calculateMinMax","smallestPixelValue","largestPixelValue","minMax","min","max","decodeTaskHandler","doneCallback","transferSyntax","taskType","handler","initialize","registerTaskHandler","taskHandlers","initialized","webWorkerTaskPaths","Object","keys","forEach","key","taskConfiguration","postMessage","status","workerIndex","taskHandler","loadWebWorkerTask","sourcePath","onmessage","msg","transferList","decodeImageFrame","start","getTime","end","decodeTimeInMS","swap16","val","decodeBigEndian","arrayBuffer","offset","byteOffset","slice","decodeJPEGBaseline","JpegImage","jpeg","colorTransform","getData","getData16","decodeJPEGLossless","lossless","Decoder","byteOutput","decoder","decompressedData","decode","decodeLittleEndian","decodeRLE","planarConfiguration","decode8Planar","decode8","decode16","frameData","frameSize","outFrame","ArrayBuffer","samplesPerPixel","header","DataView","Int8Array","out","outIndex","numSegments","getInt32","s","inIndex","maxIndex","endOfSegment","n","value","j","highByte","getMinMax","storedPixelData","storedPixel","numPixels","index","Math","default"],"mappings":"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","file":"cornerstoneWADOImageLoaderWebWorker.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"cornerstoneWADOImageLoaderWebWorker\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cornerstoneWADOImageLoaderWebWorker\"] = factory();\n\telse\n\t\troot[\"cornerstoneWADOImageLoaderWebWorker\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 61);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 82f3a0fe3908a4a7714c","export default '0.14.6';\n\n\n\n// WEBPACK FOOTER //\n// ./version.js","\r\n\r\nfunction decodeJpx (imageFrame, pixelData) {\r\n\r\n  const jpxImage = new JpxImage();\r\n\r\n  jpxImage.parse(pixelData);\r\n\r\n  const tileCount = jpxImage.tiles.length;\r\n\r\n  if (tileCount !== 1) {\r\n    throw `JPEG2000 decoder returned a tileCount of ${tileCount}, when 1 is expected`;\r\n  }\r\n\r\n  imageFrame.columns = jpxImage.width;\r\n  imageFrame.rows = jpxImage.height;\r\n  imageFrame.pixelData = jpxImage.tiles[0].items;\r\n\r\n  return imageFrame;\r\n}\r\n\r\nlet openJPEG;\r\n\r\nfunction decodeOpenJPEG (data, bytesPerPixel, signed) {\r\n  const dataPtr = openJPEG._malloc(data.length);\r\n\r\n  openJPEG.writeArrayToMemory(data, dataPtr);\r\n\r\n  // create param outpout\r\n  const imagePtrPtr = openJPEG._malloc(4);\r\n  const imageSizePtr = openJPEG._malloc(4);\r\n  const imageSizeXPtr = openJPEG._malloc(4);\r\n  const imageSizeYPtr = openJPEG._malloc(4);\r\n  const imageSizeCompPtr = openJPEG._malloc(4);\r\n\r\n  const t0 = Date.now();\r\n  const ret = openJPEG.ccall('jp2_decode', 'number', ['number', 'number', 'number', 'number', 'number', 'number', 'number'],\r\n    [dataPtr, data.length, imagePtrPtr, imageSizePtr, imageSizeXPtr, imageSizeYPtr, imageSizeCompPtr]);\r\n  // add num vomp..etc\r\n\r\n  if (ret !== 0) {\r\n    console.log('[opj_decode] decoding failed!');\r\n    openJPEG._free(dataPtr);\r\n    openJPEG._free(openJPEG.getValue(imagePtrPtr, '*'));\r\n    openJPEG._free(imageSizeXPtr);\r\n    openJPEG._free(imageSizeYPtr);\r\n    openJPEG._free(imageSizePtr);\r\n    openJPEG._free(imageSizeCompPtr);\r\n\r\n    return undefined;\r\n  }\r\n\r\n  const imagePtr = openJPEG.getValue(imagePtrPtr, '*');\r\n\r\n  const image = {\r\n    length: openJPEG.getValue(imageSizePtr, 'i32'),\r\n    sx: openJPEG.getValue(imageSizeXPtr, 'i32'),\r\n    sy: openJPEG.getValue(imageSizeYPtr, 'i32'),\r\n    nbChannels: openJPEG.getValue(imageSizeCompPtr, 'i32'), // hard coded for now\r\n    perf_timetodecode: undefined,\r\n    pixelData: undefined\r\n  };\r\n\r\n  // Copy the data from the EMSCRIPTEN heap into the correct type array\r\n  const length = image.sx * image.sy * image.nbChannels;\r\n  const src32 = new Int32Array(openJPEG.HEAP32.buffer, imagePtr, length);\r\n\r\n  if (bytesPerPixel === 1) {\r\n    if (Uint8Array.from) {\r\n      image.pixelData = Uint8Array.from(src32);\r\n    } else {\r\n      image.pixelData = new Uint8Array(length);\r\n      for (let i = 0; i < length; i++) {\r\n        image.pixelData[i] = src32[i];\r\n      }\r\n    }\r\n  } else if (signed) {\r\n    if (Int16Array.from) {\r\n      image.pixelData = Int16Array.from(src32);\r\n    } else {\r\n      image.pixelData = new Int16Array(length);\r\n      for (let i = 0; i < length; i++) {\r\n        image.pixelData[i] = src32[i];\r\n      }\r\n    }\r\n  } else if (Uint16Array.from) {\r\n    image.pixelData = Uint16Array.from(src32);\r\n  } else {\r\n    image.pixelData = new Uint16Array(length);\r\n    for (let i = 0; i < length; i++) {\r\n      image.pixelData[i] = src32[i];\r\n    }\r\n  }\r\n\r\n  const t1 = Date.now();\r\n\r\n  image.perf_timetodecode = t1 - t0;\r\n\r\n  // free\r\n  openJPEG._free(dataPtr);\r\n  openJPEG._free(imagePtrPtr);\r\n  openJPEG._free(imagePtr);\r\n  openJPEG._free(imageSizePtr);\r\n  openJPEG._free(imageSizeXPtr);\r\n  openJPEG._free(imageSizeYPtr);\r\n  openJPEG._free(imageSizeCompPtr);\r\n\r\n  return image;\r\n}\r\n\r\nfunction decodeOpenJpeg2000 (imageFrame, pixelData) {\r\n  const bytesPerPixel = imageFrame.bitsAllocated <= 8 ? 1 : 2;\r\n  const signed = imageFrame.pixelRepresentation === 1;\r\n\r\n  const image = decodeOpenJPEG(pixelData, bytesPerPixel, signed);\r\n\r\n  imageFrame.columns = image.sx;\r\n  imageFrame.rows = image.sy;\r\n  imageFrame.pixelData = image.pixelData;\r\n  if (image.nbChannels > 1) {\r\n    imageFrame.photometricInterpretation = 'RGB';\r\n  }\r\n\r\n  return imageFrame;\r\n}\r\n\r\nfunction initializeJPEG2000 (decodeConfig) {\r\n  // check to make sure codec is loaded\r\n  if (!decodeConfig.usePDFJS) {\r\n    if (typeof OpenJPEG === 'undefined') {\r\n      throw 'OpenJPEG decoder not loaded';\r\n    }\r\n  }\r\n\r\n  if (!openJPEG) {\r\n    openJPEG = OpenJPEG();\r\n    if (!openJPEG || !openJPEG._jp2_decode) {\r\n      throw 'OpenJPEG failed to initialize';\r\n    }\r\n  }\r\n}\r\n\r\nfunction decodeJPEG2000 (imageFrame, pixelData, decodeConfig, options) {\r\n  options = options || {};\r\n\r\n  initializeJPEG2000(decodeConfig);\r\n\r\n  if (options.usePDFJS || decodeConfig.usePDFJS) {\r\n    // OHIF image-JPEG2000 https://github.com/OHIF/image-JPEG2000\r\n    // console.log('PDFJS')\r\n    return decodeJpx(imageFrame, pixelData);\r\n  }\r\n\r\n  // OpenJPEG2000 https://github.com/jpambrun/openjpeg\r\n  // console.log('OpenJPEG')\r\n  return decodeOpenJpeg2000(imageFrame, pixelData);\r\n}\r\n\r\nexport default decodeJPEG2000;\r\nexport { initializeJPEG2000 };\r\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/decodeTask/decoders/decodeJPEG2000.js","\r\n\r\nlet charLS;\r\n\r\nfunction jpegLSDecode (data, isSigned) {\r\n\r\n  // prepare input parameters\r\n  const dataPtr = charLS._malloc(data.length);\r\n\r\n  charLS.writeArrayToMemory(data, dataPtr);\r\n\r\n  // prepare output parameters\r\n  const imagePtrPtr = charLS._malloc(4);\r\n  const imageSizePtr = charLS._malloc(4);\r\n  const widthPtr = charLS._malloc(4);\r\n  const heightPtr = charLS._malloc(4);\r\n  const bitsPerSamplePtr = charLS._malloc(4);\r\n  const stridePtr = charLS._malloc(4);\r\n  const allowedLossyErrorPtr = charLS._malloc(4);\r\n  const componentsPtr = charLS._malloc(4);\r\n  const interleaveModePtr = charLS._malloc(4);\r\n\r\n  // Decode the image\r\n  const result = charLS.ccall(\r\n    'jpegls_decode',\r\n    'number',\r\n    ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number'],\r\n    [dataPtr, data.length, imagePtrPtr, imageSizePtr, widthPtr, heightPtr, bitsPerSamplePtr, stridePtr, componentsPtr, allowedLossyErrorPtr, interleaveModePtr]\r\n  );\r\n\r\n  // Extract result values into object\r\n  const image = {\r\n    result,\r\n    width: charLS.getValue(widthPtr, 'i32'),\r\n    height: charLS.getValue(heightPtr, 'i32'),\r\n    bitsPerSample: charLS.getValue(bitsPerSamplePtr, 'i32'),\r\n    stride: charLS.getValue(stridePtr, 'i32'),\r\n    components: charLS.getValue(componentsPtr, 'i32'),\r\n    allowedLossyError: charLS.getValue(allowedLossyErrorPtr, 'i32'),\r\n    interleaveMode: charLS.getValue(interleaveModePtr, 'i32'),\r\n    pixelData: undefined\r\n  };\r\n\r\n  // Copy image from emscripten heap into appropriate array buffer type\r\n  const imagePtr = charLS.getValue(imagePtrPtr, '*');\r\n\r\n  if (image.bitsPerSample <= 8) {\r\n    image.pixelData = new Uint8Array(image.width * image.height * image.components);\r\n    image.pixelData.set(new Uint8Array(charLS.HEAP8.buffer, imagePtr, image.pixelData.length));\r\n  } else if (isSigned) {\r\n    image.pixelData = new Int16Array(image.width * image.height * image.components);\r\n    image.pixelData.set(new Int16Array(charLS.HEAP16.buffer, imagePtr, image.pixelData.length));\r\n  } else {\r\n    image.pixelData = new Uint16Array(image.width * image.height * image.components);\r\n    image.pixelData.set(new Uint16Array(charLS.HEAP16.buffer, imagePtr, image.pixelData.length));\r\n  }\r\n\r\n  // free memory and return image object\r\n  charLS._free(dataPtr);\r\n  charLS._free(imagePtr);\r\n  charLS._free(imagePtrPtr);\r\n  charLS._free(imageSizePtr);\r\n  charLS._free(widthPtr);\r\n  charLS._free(heightPtr);\r\n  charLS._free(bitsPerSamplePtr);\r\n  charLS._free(stridePtr);\r\n  charLS._free(componentsPtr);\r\n  charLS._free(interleaveModePtr);\r\n\r\n  return image;\r\n}\r\n\r\nfunction initializeJPEGLS () {\r\n  // check to make sure codec is loaded\r\n  if (typeof CharLS === 'undefined') {\r\n    throw 'No JPEG-LS decoder loaded';\r\n  }\r\n\r\n  // Try to initialize CharLS\r\n  // CharLS https://github.com/chafey/charls\r\n  if (!charLS) {\r\n    charLS = CharLS();\r\n    if (!charLS || !charLS._jpegls_decode) {\r\n      throw 'JPEG-LS failed to initialize';\r\n    }\r\n  }\r\n\r\n}\r\n\r\nfunction decodeJPEGLS (imageFrame, pixelData) {\r\n  initializeJPEGLS();\r\n\r\n  const image = jpegLSDecode(pixelData, imageFrame.pixelRepresentation === 1);\r\n  // console.log(image);\r\n\r\n  // throw error if not success or too much data\r\n  if (image.result !== 0 && image.result !== 6) {\r\n    throw `JPEG-LS decoder failed to decode frame (error code ${image.result})`;\r\n  }\r\n\r\n  imageFrame.columns = image.width;\r\n  imageFrame.rows = image.height;\r\n  imageFrame.pixelData = image.pixelData;\r\n\r\n  return imageFrame;\r\n}\r\n\r\nexport default decodeJPEGLS;\r\nexport { initializeJPEGLS };\r\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/decodeTask/decoders/decodeJPEGLS.js","import { initializeJPEG2000 } from './decoders/decodeJPEG2000';\r\nimport { initializeJPEGLS } from './decoders/decodeJPEGLS';\r\nimport getMinMax from './getMinMax';\r\nimport decodeImageFrame from './decodeImageFrame';\r\n\r\n// flag to ensure codecs are loaded only once\r\nlet codecsLoaded = false;\r\n\r\n// the configuration object for the decodeTask\r\nlet decodeConfig;\r\n\r\n/**\r\n * Function to control loading and initializing the codecs\r\n * @param config\r\n */\r\nfunction loadCodecs (config) {\r\n  // prevent loading codecs more than once\r\n  if (codecsLoaded) {\r\n    return;\r\n  }\r\n\r\n  // Load the codecs\r\n  // console.time('loadCodecs');\r\n  self.importScripts(config.decodeTask.codecsPath);\r\n  codecsLoaded = true;\r\n  // console.timeEnd('loadCodecs');\r\n\r\n  // Initialize the codecs\r\n  if (config.decodeTask.initializeCodecsOnStartup) {\r\n    // console.time('initializeCodecs');\r\n    initializeJPEG2000(config.decodeTask);\r\n    initializeJPEGLS(config.decodeTask);\r\n    // console.timeEnd('initializeCodecs');\r\n  }\r\n}\r\n\r\n/**\r\n * Task initialization function\r\n */\r\nfunction decodeTaskInitialize (config) {\r\n  decodeConfig = config;\r\n  if (config.decodeTask.loadCodecsOnStartup) {\r\n    loadCodecs(config);\r\n  }\r\n}\r\n\r\nfunction calculateMinMax (imageFrame) {\r\n  if (imageFrame.smallestPixelValue !== undefined && imageFrame.largestPixelValue !== undefined) {\r\n    return;\r\n  }\r\n\r\n  const minMax = getMinMax(imageFrame.pixelData);\r\n\r\n  imageFrame.smallestPixelValue = minMax.min;\r\n  imageFrame.largestPixelValue = minMax.max;\r\n}\r\n\r\n/**\r\n * Task handler function\r\n */\r\nfunction decodeTaskHandler (data, doneCallback) {\r\n  // Load the codecs if they aren't already loaded\r\n  loadCodecs(decodeConfig);\r\n\r\n  const imageFrame = data.data.imageFrame;\r\n\r\n  // convert pixel data from ArrayBuffer to Uint8Array since web workers support passing ArrayBuffers but\r\n  // not typed arrays\r\n  const pixelData = new Uint8Array(data.data.pixelData);\r\n\r\n  decodeImageFrame(\r\n    imageFrame,\r\n    data.data.transferSyntax,\r\n    pixelData,\r\n    decodeConfig.decodeTask,\r\n    data.data.options);\r\n\r\n  calculateMinMax(imageFrame);\r\n\r\n  // convert from TypedArray to ArrayBuffer since web workers support passing ArrayBuffers but not\r\n  // typed arrays\r\n  imageFrame.pixelData = imageFrame.pixelData.buffer;\r\n\r\n  // invoke the callback with our result and pass the pixelData in the transferList to move it to\r\n  // UI thread without making a copy\r\n  doneCallback(imageFrame, [imageFrame.pixelData]);\r\n}\r\n\r\nexport default {\r\n  taskType: 'decodeTask',\r\n  handler: decodeTaskHandler,\r\n  initialize: decodeTaskInitialize\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/decodeTask/decodeTask.js","// an object of task handlers\r\nconst taskHandlers = {};\r\n\r\n// Flag to ensure web worker is only initialized once\r\nlet initialized = false;\r\n\r\n// the configuration object passed in when the web worker manager is initialized\r\nlet config;\r\n\r\n/**\r\n * Initialization function that loads additional web workers and initializes them\r\n * @param data\r\n */\r\nfunction initialize (data) {\r\n  // console.log('web worker initialize ', data.workerIndex);\r\n  // prevent initialization from happening more than once\r\n  if (initialized) {\r\n    return;\r\n  }\r\n\r\n  // save the config data\r\n  config = data.config;\r\n\r\n  // load any additional web worker tasks\r\n  if (data.config.webWorkerTaskPaths) {\r\n    for (let i = 0; i < data.config.webWorkerTaskPaths.length; i++) {\r\n      self.importScripts(data.config.webWorkerTaskPaths[i]);\r\n    }\r\n  }\r\n\r\n  // initialize each task handler\r\n  Object.keys(taskHandlers).forEach(function (key) {\r\n    taskHandlers[key].initialize(config.taskConfiguration);\r\n  });\r\n\r\n  // tell main ui thread that we have completed initialization\r\n  self.postMessage({\r\n    taskType: 'initialize',\r\n    status: 'success',\r\n    result: {\r\n    },\r\n    workerIndex: data.workerIndex\r\n  });\r\n\r\n  initialized = true;\r\n}\r\n\r\n/**\r\n * Function exposed to web worker tasks to register themselves\r\n * @param taskHandler\r\n */\r\nexport function registerTaskHandler (taskHandler) {\r\n  if (taskHandlers[taskHandler.taskType]) {\r\n    console.log('attempt to register duplicate task handler \"', taskHandler.taskType, '\"');\r\n\r\n    return false;\r\n  }\r\n  taskHandlers[taskHandler.taskType] = taskHandler;\r\n  if (initialized) {\r\n    taskHandler.initialize(config.taskConfiguration);\r\n  }\r\n}\r\n\r\n/**\r\n * Function to load a new web worker task with updated configuration\r\n * @param data\r\n */\r\nfunction loadWebWorkerTask (data) {\r\n  config = data.config;\r\n  self.importScripts(data.sourcePath);\r\n}\r\n\r\n/**\r\n * Web worker message handler - dispatches messages to the registered task handlers\r\n * @param msg\r\n */\r\nself.onmessage = function (msg) {\r\n  // console.log('web worker onmessage', msg.data);\r\n\r\n  // handle initialize message\r\n  if (msg.data.taskType === 'initialize') {\r\n    initialize(msg.data);\r\n\r\n    return;\r\n  }\r\n\r\n  // handle loadWebWorkerTask message\r\n  if (msg.data.taskType === 'loadWebWorkerTask') {\r\n    loadWebWorkerTask(msg.data);\r\n\r\n    return;\r\n  }\r\n\r\n  // dispatch the message if there is a handler registered for it\r\n  if (taskHandlers[msg.data.taskType]) {\r\n    taskHandlers[msg.data.taskType].handler(msg.data, function (result, transferList) {\r\n      self.postMessage({\r\n        taskType: msg.data.taskType,\r\n        status: 'success',\r\n        result,\r\n        workerIndex: msg.data.workerIndex\r\n      }, transferList);\r\n    });\r\n\r\n    return;\r\n  }\r\n\r\n  // not task handler registered - send a failure message back to ui thread\r\n  console.log('no task handler for ', msg.data.taskType);\r\n  console.log(taskHandlers);\r\n  self.postMessage({\r\n    taskType: msg.data.taskType,\r\n    status: 'failed - no task handler registered',\r\n    workerIndex: msg.data.workerIndex\r\n  });\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/webWorker.js","import decodeLittleEndian from './decoders/decodeLittleEndian';\r\nimport decodeBigEndian from './decoders/decodeBigEndian';\r\nimport decodeRLE from './decoders/decodeRLE';\r\nimport decodeJPEGBaseline from './decoders/decodeJPEGBaseline';\r\nimport decodeJPEGLossless from './decoders/decodeJPEGLossless';\r\nimport decodeJPEGLS from './decoders/decodeJPEGLS';\r\nimport decodeJPEG2000 from './decoders/decodeJPEG2000';\r\n\r\nfunction decodeImageFrame (imageFrame, transferSyntax, pixelData, decodeConfig, options) {\r\n  const start = new Date().getTime();\r\n\r\n  if (transferSyntax === '1.2.840.10008.1.2') {\r\n    // Implicit VR Little Endian\r\n    imageFrame = decodeLittleEndian(imageFrame, pixelData);\r\n  } else if (transferSyntax === '1.2.840.10008.1.2.1') {\r\n    // Explicit VR Little Endian\r\n    imageFrame = decodeLittleEndian(imageFrame, pixelData);\r\n  } else if (transferSyntax === '1.2.840.10008.1.2.2') {\r\n    // Explicit VR Big Endian (retired)\r\n    imageFrame = decodeBigEndian(imageFrame, pixelData);\r\n  } else if (transferSyntax === '1.2.840.10008.1.2.1.99') {\r\n    // Deflate transfer syntax (deflated by dicomParser)\r\n    imageFrame = decodeLittleEndian(imageFrame, pixelData);\r\n  } else if (transferSyntax === '1.2.840.10008.1.2.5') {\r\n    // RLE Lossless\r\n    imageFrame = decodeRLE(imageFrame, pixelData);\r\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.50') {\r\n    // JPEG Baseline lossy process 1 (8 bit)\r\n    imageFrame = decodeJPEGBaseline(imageFrame, pixelData);\r\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.51') {\r\n    // JPEG Baseline lossy process 2 & 4 (12 bit)\r\n    imageFrame = decodeJPEGBaseline(imageFrame, pixelData);\r\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.57') {\r\n    // JPEG Lossless, Nonhierarchical (Processes 14)\r\n    imageFrame = decodeJPEGLossless(imageFrame, pixelData);\r\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.70') {\r\n    // JPEG Lossless, Nonhierarchical (Processes 14 [Selection 1])\r\n    imageFrame = decodeJPEGLossless(imageFrame, pixelData);\r\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.80') {\r\n    // JPEG-LS Lossless Image Compression\r\n    imageFrame = decodeJPEGLS(imageFrame, pixelData);\r\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.81') {\r\n    // JPEG-LS Lossy (Near-Lossless) Image Compression\r\n    imageFrame = decodeJPEGLS(imageFrame, pixelData);\r\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.90') {\r\n    // JPEG 2000 Lossless\r\n    imageFrame = decodeJPEG2000(imageFrame, pixelData, decodeConfig, options);\r\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.91') {\r\n    // JPEG 2000 Lossy\r\n    imageFrame = decodeJPEG2000(imageFrame, pixelData, decodeConfig, options);\r\n  } else {\r\n    if (console && console.log) {\r\n      console.log(`Image cannot be decoded due to Unsupported transfer syntax ${transferSyntax}`);\r\n    }\r\n\r\n    throw `no decoder for transfer syntax ${transferSyntax}`;\r\n  }\r\n\r\n    /* Don't know if these work...\r\n   // JPEG 2000 Part 2 Multicomponent Image Compression (Lossless Only)\r\n   else if(transferSyntax === \"1.2.840.10008.1.2.4.92\")\r\n   {\r\n   return decodeJPEG2000(dataSet, frame);\r\n   }\r\n   // JPEG 2000 Part 2 Multicomponent Image Compression\r\n   else if(transferSyntax === \"1.2.840.10008.1.2.4.93\")\r\n   {\r\n   return decodeJPEG2000(dataSet, frame);\r\n   }\r\n   */\r\n\r\n  const end = new Date().getTime();\r\n\r\n  imageFrame.decodeTimeInMS = end - start;\r\n\r\n  return imageFrame;\r\n}\r\n\r\nexport default decodeImageFrame;\r\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/decodeTask/decodeImageFrame.js","/* eslint no-bitwise: 0 */\r\nfunction swap16 (val) {\r\n  return ((val & 0xFF) << 8) |\r\n    ((val >> 8) & 0xFF);\r\n}\r\n\r\n\r\nfunction decodeBigEndian (imageFrame, pixelData) {\r\n  if (imageFrame.bitsAllocated === 16) {\r\n    let arrayBuffer = pixelData.buffer;\r\n    let offset = pixelData.byteOffset;\r\n    const length = pixelData.length;\r\n    // if pixel data is not aligned on even boundary, shift it so we can create the 16 bit array\r\n    // buffers on it\r\n\r\n    if (offset % 2) {\r\n      arrayBuffer = arrayBuffer.slice(offset);\r\n      offset = 0;\r\n    }\r\n\r\n    if (imageFrame.pixelRepresentation === 0) {\r\n      imageFrame.pixelData = new Uint16Array(arrayBuffer, offset, length / 2);\r\n    } else {\r\n      imageFrame.pixelData = new Int16Array(arrayBuffer, offset, length / 2);\r\n    }\r\n    // Do the byte swap\r\n    for (let i = 0; i < imageFrame.pixelData.length; i++) {\r\n      imageFrame.pixelData[i] = swap16(imageFrame.pixelData[i]);\r\n    }\r\n\r\n  } else if (imageFrame.bitsAllocated === 8) {\r\n    imageFrame.pixelData = pixelData;\r\n  }\r\n\r\n  return imageFrame;\r\n}\r\n\r\nexport default decodeBigEndian;\r\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/decodeTask/decoders/decodeBigEndian.js","\r\n\r\nfunction decodeJPEGBaseline (imageFrame, pixelData) {\r\n  // check to make sure codec is loaded\r\n  if (typeof JpegImage === 'undefined') {\r\n    throw 'No JPEG Baseline decoder loaded';\r\n  }\r\n  const jpeg = new JpegImage();\r\n\r\n  jpeg.parse(pixelData);\r\n\r\n  // Do not use the internal jpeg.js color transformation,\r\n  // since we will handle this afterwards\r\n  jpeg.colorTransform = false;\r\n\r\n  if (imageFrame.bitsAllocated === 8) {\r\n    imageFrame.pixelData = jpeg.getData(imageFrame.columns, imageFrame.rows);\r\n\r\n    return imageFrame;\r\n  } else if (imageFrame.bitsAllocated === 16) {\r\n    imageFrame.pixelData = jpeg.getData16(imageFrame.columns, imageFrame.rows);\r\n\r\n    return imageFrame;\r\n  }\r\n}\r\n\r\nexport default decodeJPEGBaseline;\r\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/decodeTask/decoders/decodeJPEGBaseline.js","\r\n\r\nfunction decodeJPEGLossless (imageFrame, pixelData) {\r\n  // check to make sure codec is loaded\r\n  if (typeof jpeg === 'undefined' ||\r\n    typeof jpeg.lossless === 'undefined' ||\r\n    typeof jpeg.lossless.Decoder === 'undefined') {\r\n    throw 'No JPEG Lossless decoder loaded';\r\n  }\r\n\r\n  const byteOutput = imageFrame.bitsAllocated <= 8 ? 1 : 2;\r\n  // console.time('jpeglossless');\r\n  const buffer = pixelData.buffer;\r\n  const decoder = new jpeg.lossless.Decoder();\r\n  const decompressedData = decoder.decode(buffer, pixelData.byteOffset, pixelData.length, byteOutput);\r\n  // console.timeEnd('jpeglossless');\r\n\r\n  if (imageFrame.pixelRepresentation === 0) {\r\n    if (imageFrame.bitsAllocated === 16) {\r\n      imageFrame.pixelData = new Uint16Array(decompressedData.buffer);\r\n\r\n      return imageFrame;\r\n    }\r\n      // untested!\r\n    imageFrame.pixelData = new Uint8Array(decompressedData.buffer);\r\n\r\n    return imageFrame;\r\n\r\n  }\r\n  imageFrame.pixelData = new Int16Array(decompressedData.buffer);\r\n\r\n  return imageFrame;\r\n\r\n}\r\n\r\nexport default decodeJPEGLossless;\r\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/decodeTask/decoders/decodeJPEGLossless.js","function decodeLittleEndian (imageFrame, pixelData) {\r\n  if (imageFrame.bitsAllocated === 16) {\r\n    let arrayBuffer = pixelData.buffer;\r\n    let offset = pixelData.byteOffset;\r\n    const length = pixelData.length;\r\n    // if pixel data is not aligned on even boundary, shift it so we can create the 16 bit array\r\n    // buffers on it\r\n\r\n    if (offset % 2) {\r\n      arrayBuffer = arrayBuffer.slice(offset);\r\n      offset = 0;\r\n    }\r\n\r\n    if (imageFrame.pixelRepresentation === 0) {\r\n      imageFrame.pixelData = new Uint16Array(arrayBuffer, offset, length / 2);\r\n    } else {\r\n      imageFrame.pixelData = new Int16Array(arrayBuffer, offset, length / 2);\r\n    }\r\n  } else if (imageFrame.bitsAllocated === 8) {\r\n    imageFrame.pixelData = pixelData;\r\n  }\r\n\r\n  return imageFrame;\r\n}\r\n\r\nexport default decodeLittleEndian;\r\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/decodeTask/decoders/decodeLittleEndian.js","function decodeRLE (imageFrame, pixelData) {\r\n\r\n  if (imageFrame.bitsAllocated === 8) {\r\n    if (imageFrame.planarConfiguration) {\r\n      return decode8Planar(imageFrame, pixelData);\r\n    } else {\r\n      return decode8(imageFrame, pixelData);\r\n    }\r\n  } else if (imageFrame.bitsAllocated === 16) {\r\n    return decode16(imageFrame, pixelData);\r\n  }\r\n  throw 'unsupported pixel format for RLE';\r\n\r\n}\r\n\r\nfunction decode8 (imageFrame, pixelData) {\r\n  const frameData = pixelData;\r\n  const frameSize = imageFrame.rows * imageFrame.columns;\r\n  const outFrame = new ArrayBuffer(frameSize * imageFrame.samplesPerPixel);\r\n  const header = new DataView(frameData.buffer, frameData.byteOffset);\r\n  const data = new Int8Array(frameData.buffer, frameData.byteOffset);\r\n  const out = new Int8Array(outFrame);\r\n\r\n  let outIndex = 0;\r\n  const numSegments = header.getInt32(0, true);\r\n\r\n  for (let s = 0; s < numSegments; ++s) {\r\n    outIndex = s;\r\n\r\n    let inIndex = header.getInt32((s + 1) * 4, true);\r\n    let maxIndex = header.getInt32((s + 2) * 4, true);\r\n\r\n    if (maxIndex === 0) {\r\n      maxIndex = frameData.length;\r\n    }\r\n\r\n    const endOfSegment = frameSize * numSegments;\r\n\r\n    while (inIndex < maxIndex) {\r\n      const n = data[inIndex++];\r\n\r\n      if (n >= 0 && n <= 127) {\r\n        // copy n bytes\r\n        for (let i = 0; i < n + 1 && outIndex < endOfSegment; ++i) {\r\n          out[outIndex] = data[inIndex++];\r\n          outIndex += imageFrame.samplesPerPixel;\r\n        }\r\n      } else if (n <= -1 && n >= -127) {\r\n        const value = data[inIndex++];\r\n        // run of n bytes\r\n\r\n        for (let j = 0; j < -n + 1 && outIndex < endOfSegment; ++j) {\r\n          out[outIndex] = value;\r\n          outIndex += imageFrame.samplesPerPixel;\r\n        }\r\n      }/* else if (n === -128) {\r\n\r\n      } // do nothing */\r\n    }\r\n  }\r\n  imageFrame.pixelData = new Uint8Array(outFrame);\r\n\r\n  return imageFrame;\r\n}\r\n  \r\nfunction decode8Planar (imageFrame, pixelData) {\r\n  const frameData = pixelData;\r\n  const frameSize = imageFrame.rows * imageFrame.columns;\r\n  const outFrame = new ArrayBuffer(frameSize * imageFrame.samplesPerPixel);\r\n  const header = new DataView(frameData.buffer, frameData.byteOffset);\r\n  const data = new Int8Array(frameData.buffer, frameData.byteOffset);\r\n  const out = new Int8Array(outFrame);\r\n\r\n  let outIndex = 0;\r\n  const numSegments = header.getInt32(0, true);\r\n\r\n  for (let s = 0; s < numSegments; ++s) {\r\n    outIndex = s * frameSize;\r\n\r\n    let inIndex = header.getInt32((s + 1) * 4, true);\r\n    let maxIndex = header.getInt32((s + 2) * 4, true);\r\n\r\n    if (maxIndex === 0) {\r\n      maxIndex = frameData.length;\r\n    }\r\n\r\n    const endOfSegment = frameSize * numSegments;\r\n\r\n    while (inIndex < maxIndex) {\r\n      const n = data[inIndex++];\r\n\r\n      if (n >= 0 && n <= 127) {\r\n        // copy n bytes\r\n        for (let i = 0; i < n + 1 && outIndex < endOfSegment; ++i) {\r\n          out[outIndex] = data[inIndex++];\r\n          outIndex++;\r\n        }\r\n      } else if (n <= -1 && n >= -127) {\r\n        const value = data[inIndex++];\r\n        // run of n bytes\r\n\r\n        for (let j = 0; j < -n + 1 && outIndex < endOfSegment; ++j) {\r\n          out[outIndex] = value;\r\n          outIndex++;\r\n        }\r\n      }/* else if (n === -128) {\r\n\r\n      } // do nothing */\r\n    }\r\n  }\r\n  imageFrame.pixelData = new Uint8Array(outFrame);\r\n\r\n  return imageFrame;\r\n}\r\n\r\nfunction decode16 (imageFrame, pixelData) {\r\n  const frameData = pixelData;\r\n  const frameSize = imageFrame.rows * imageFrame.columns;\r\n  const outFrame = new ArrayBuffer(frameSize * imageFrame.samplesPerPixel * 2);\r\n\r\n  const header = new DataView(frameData.buffer, frameData.byteOffset);\r\n  const data = new Int8Array(frameData.buffer, frameData.byteOffset);\r\n  const out = new Int8Array(outFrame);\r\n\r\n  const numSegments = header.getInt32(0, true);\r\n\r\n  for (let s = 0; s < numSegments; ++s) {\r\n    let outIndex = 0;\r\n    const highByte = (s === 0 ? 1 : 0);\r\n\r\n    let inIndex = header.getInt32((s + 1) * 4, true);\r\n    let maxIndex = header.getInt32((s + 2) * 4, true);\r\n\r\n    if (maxIndex === 0) {\r\n      maxIndex = frameData.length;\r\n    }\r\n\r\n    while (inIndex < maxIndex) {\r\n      const n = data[inIndex++];\r\n\r\n      if (n >= 0 && n <= 127) {\r\n        for (let i = 0; i < n + 1 && outIndex < frameSize; ++i) {\r\n          out[(outIndex * 2) + highByte] = data[inIndex++];\r\n          outIndex++;\r\n        }\r\n      } else if (n <= -1 && n >= -127) {\r\n        const value = data[inIndex++];\r\n\r\n        for (let j = 0; j < -n + 1 && outIndex < frameSize; ++j) {\r\n          out[(outIndex * 2) + highByte] = value;\r\n          outIndex++;\r\n        }\r\n      }/* else if (n === -128) {\r\n\r\n      } // do nothing */\r\n    }\r\n  }\r\n  if (imageFrame.pixelRepresentation === 0) {\r\n    imageFrame.pixelData = new Uint16Array(outFrame);\r\n  } else {\r\n    imageFrame.pixelData = new Int16Array(outFrame);\r\n  }\r\n\r\n  return imageFrame;\r\n}\r\n\r\nexport default decodeRLE;\r\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/decodeTask/decoders/decodeRLE.js","function getMinMax (storedPixelData) {\r\n  // we always calculate the min max values since they are not always\r\n  // present in DICOM and we don't want to trust them anyway as cornerstone\r\n  // depends on us providing reliable values for these\r\n  let min = storedPixelData[0];\r\n  let max = storedPixelData[0];\r\n  let storedPixel;\r\n  const numPixels = storedPixelData.length;\r\n\r\n  for (let index = 1; index < numPixels; index++) {\r\n    storedPixel = storedPixelData[index];\r\n    min = Math.min(min, storedPixel);\r\n    max = Math.max(max, storedPixel);\r\n  }\r\n\r\n  return {\r\n    min,\r\n    max\r\n  };\r\n}\r\n\r\nexport default getMinMax;\r\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/decodeTask/getMinMax.js","import { registerTaskHandler } from './webWorker';\r\nimport decodeTask from './decodeTask/decodeTask';\r\n\r\n// register our task\r\nregisterTaskHandler(decodeTask);\r\n\r\nexport { registerTaskHandler };\r\nexport { default as version } from '../version';\r\n\n\n\n// WEBPACK FOOTER //\n// ./webWorker/index.js"],"sourceRoot":""}